{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":"<p>This is a personal documentation site that summarizes my learning and work experience, divided into several parts as follows:</p> <ul> <li>Java which I major in is the primary part including basic syntax, extension libraries and various framework based on Java.</li> <li>CS part is mainly about basic knowledge of Computer Science, such as operating system, data structures, alogorithms, etc.</li> <li>The third part is about Python, which is usually applied to programming that requires efficiency.</li> <li>Besides, various other technologies that may be involved during development are included in the fourth part----Development.</li> <li>As for other topics that are not closely related to development, they are allocated in Misc.</li> </ul>"},{"location":"cs/algo/backtracking.html","title":"Backtracking","text":""},{"location":"cs/algo/backtracking.html#References","title":"References","text":"<ul> <li>Algorithms/Backtracking.</li> </ul>"},{"location":"cs/algo/divide-and-conquer.html","title":"Divide and Conquer","text":""},{"location":"cs/algo/divide-and-conquer.html#Algorithm","title":"Algorithm","text":"<p>A typical Divide and Conquer algorithm solves a problem using following three steps:</p> <ol> <li>Divide: Break the given problem into sub-problems of same type.</li> <li>Conquer: Recursively solve these sub-problems.</li> <li>Combine: Appropriately combine the answers.</li> </ol>"},{"location":"cs/algo/divide-and-conquer.html#Example","title":"Example","text":"<p>Given an integer array \\(A[1, n]\\), write a function <code>calculate(int[] A)</code> to calculate its sub sequence with max summary, \\(MS\\) for short.</p>"},{"location":"cs/algo/divide-and-conquer.html#Divide","title":"Divide","text":"<p>Assume \\(m=\\frac{n}{2}\\), then divide \\(A\\) into two parts, \\(A[1, m]\\) and \\(A[m+1,n]\\). Compute the \\(MS\\) of \\(A[1,m]\\) and \\(A[m+1,n]\\) separately, as well as \\(X\\), \\(MS\\) of sub sequence crossing over \\(A[1,m]\\) and \\(A[m+1,n]\\).</p> <p>Easy to get that</p> \\[ X = \\max\\left\\{\\sum_{i=1}^{m}A_i, \\sum_{i=2}^{m}A_i, ..., \\sum_{i=m}^{m}A_i\\right\\} + \\max\\left\\{\\sum_{i=m+1}^{m+1}A_i, \\sum_{i=m+1}^{m+2}A_i, ..., \\sum_{i=m+1}^{n}A_i\\right\\} \\]"},{"location":"cs/algo/divide-and-conquer.html#Combine","title":"Combine","text":"\\[ MS(A) = \\max\\{MS(A[1,m]), MS(A[m+1,n]), X \\} \\]"},{"location":"cs/algo/divide-and-conquer.html#Time-Complexity","title":"Time Complexity","text":"<p>Time complexity of \\(X\\) is \\(O(n)\\). So, \\(T(n) = 2T(\\frac{n}{2}) + O(n)\\). Then the total time complexity is \\(O(n\\log{n})\\).</p>"},{"location":"cs/algo/divide-and-conquer.html#Notes","title":"Notes","text":"<p>The best algorithm for the problem has \\(O(n)\\) time complexity. Assume \\(MS(k)\\) is \\(MS\\) of the front k elements of \\(A\\) and \\(MSE(k)\\) is \\(MS\\) of the front \\(k\\) elements ending with \\(A[k]\\). Then calculate \\(MS(k+1)\\) as follows.</p> \\[ MS(k+1) =     \\begin{cases}         A[k+1] + \\max\\{0, MSE(k)\\} &amp;\\text{if }A[k+1] \\text{ in } MS[k+1] \\\\         MS(k) &amp;\\text{if not}     \\end{cases} \\] <p>Then, \\(MS(k+1)\\) is the larger one. In this way, \\(T(n) = T(n-1) + C = O(n)\\).</p>"},{"location":"cs/algo/divide-and-conquer.html#References","title":"References","text":"<ul> <li>Divide and Conquer - GeeksforGeeks</li> </ul>"},{"location":"cs/algo/crypto/rsa.html","title":"RSA","text":""},{"location":"cs/algo/crypto/rsa.html#Overview","title":"Overview","text":"<p>Generally, data transforming from senders to receivers need to be encrypted. A common way is as follows:</p> <ul> <li>Senders encrypt plain text with a key K.</li> <li>Receivers decrypt the cipher text with the same key K.</li> </ul> <p>It's called Symmetric Cryptography Algorithm. The question is, however, how to store and pass the key in safety.</p> <p>Then comes another algorithm called Asymmetric Cryptography Algorithm, without key transformation.</p> <ul> <li>Receivers generate two keys: one is public and another is private.</li> <li>Senders get the public one to encrypt the information.</li> <li>Receivers use the private key to decrypt the data.</li> </ul> <p>RSA Algorithm is one of asymmetric cryptography algorithms. Below is the basic principle of RSA.</p>"},{"location":"cs/algo/crypto/rsa.html#Preparation","title":"Preparation","text":""},{"location":"cs/algo/crypto/rsa.html#Coprime","title":"Coprime","text":"<p>First to know is a concept called coprime. It's easy to draw conclusions as follows:</p> <ul> <li>Any two prime numbers are coprime.</li> <li>If the smaller one is prime, the two numbers are coprime as long as the greater ones isn't a multiple of the smaller one.</li> <li>If the greater one is prime, the two numbers are coprime.</li> <li>Any number and 1 are coprime.</li> <li>Any number \\(p\\) and \\(p-1\\) are coprime.</li> <li>If \\(p\\) is odd, \\(p\\) and \\(p-2\\) are coprime.</li> </ul>"},{"location":"cs/algo/crypto/rsa.html#Eulers-totient-function","title":"Euler's totient function","text":"<p>Then comes a question: given any positive integer \\(n\\), how many integers \\(k\\) in the range \\(1\\le{k}\\lt{n}\\) are relatively prime to \\(n\\)?</p> <p>The counting is called Euler's totient function, expressed as \\(\\varphi(n)\\). Steps below are to calculate it.</p> <ul> <li>If \\(n=1\\), \\(\\varphi(n)=1\\).</li> <li>If \\(n\\) is prime, \\(\\varphi(n)=n-1\\).</li> <li> <p>If \\(n=p^k\\) and \\(p\\) is prime, then</p> \\[ \\begin{equation}     \\varphi(n)=\\varphi(p^k)=p^k-p^{k-1}=p^k(1-\\frac{1}{p}) \\end{equation} \\] </li> <li> <p>\\(\\varphi(n)\\) is a multiplicative function. That's to say If \\(n=p_1\u00b7p_2\\) and \\(p_1\\) is coprime to \\(p_2\\), then</p> \\[ \\begin{equation}     \\varphi(n)=\\varphi(p_1\u00b7p_2)=\\varphi(p_1)\u00b7\\varphi(p_2) \\end{equation} \\] </li> <li> <p>The fundamental theorem of arithmetic states that if \\(n&gt;1\\) there is a unique expression, \\(n=p_1^{k_1}\u00b7p_2^{k_2}\u00b7\u00b7\u00b7p_r^{k_r}\\), combined with the two formulas above, then</p> \\[ \\begin{equation}     \\varphi(n)=n(1-\\frac{1}{p_1})(1-\\frac{1}{p_2})(1-\\frac{1}{p_r}) \\end{equation} \\] </li> </ul>"},{"location":"cs/algo/crypto/rsa.html#Carmichael-function","title":"Carmichael function","text":"<p>Given a positive integer \\(n\\), Carmichael function \\(\\lambda(n)\\) is defined as the smallest positive integer \\(m\\) such that</p> \\[ \\begin{equation}     a^m\\equiv1\\pmod{n}, \\quad1\\le{a}\\le{n}\\text{ and }a\\text{ is coprime to }n \\end{equation} \\] <p>Besides, \\(n\\) can by written in a unique way as</p> \\[ \\begin{equation}     n=p_1^{k_1}\u00b7p_2^{k_2}\u00b7\u00b7\u00b7p_r^{k_r},\\quad p_1, p_2, \\ldots, p_r\\text{ are primes} \\end{equation} \\] <p>Then \\(\\lambda (n)\\) is the least common multiple of the Carmichael function of each of its prime power factors, proved by Chinese Remainder Theorem:</p> \\[ \\begin{equation}     \\lambda (n)=\\operatorname {lcm} (\\lambda (p_1^{k_1}), \\lambda (p_2^{k_2}), \\ldots, \\lambda (p_r^{k_r})) \\end{equation} \\] <p>By Carmichael's theorem,</p> \\[ \\begin{equation}     \\lambda (p^k) =         \\begin{cases}             \\varphi (p^k) &amp;\\text {if } p^k \\text{ is 2, 4 or a power of an odd prime} \\\\             \\frac{1}{2} \\varphi (p^k) &amp;\\text{if } p^k \\text{ is powers of 2 greater than 4}         \\end{cases} \\end{equation} \\] <p>and as given above,</p> \\[ \\begin{equation}     \\varphi (p^k) = p^k(1-\\frac{1}{p}) \\end{equation} \\]"},{"location":"cs/algo/crypto/rsa.html#RSA","title":"RSA","text":""},{"location":"cs/algo/crypto/rsa.html#Key-Generation","title":"Key Generation","text":"<p>Assume Zoe wants to communicate with EZ, then how do Zoe generate the public and private keys?</p> <ol> <li> <p>Choose two distinct prime numbers \\(p\\) and \\(q\\).</p> <ul> <li>For security purposes, the integers \\(p\\) and \\(q\\) should be chosen at random, and should be similar in magnitude but differ in length by a few digits to make factoring harder. Prime integers can be efficiently found using a primality test.</li> <li>\\(p\\) and \\(q\\) are kept secret.</li> <li>Assume that Zoe chooses 61 and 53.</li> </ul> </li> <li> <p>Compute \\(n = pq\\).</p> <ul> <li>\\(n\\) is used as the modulus for both the public and private keys. Its length, usually expressed in bits, is the key length.</li> <li>\\(n\\) is released as part of the public key.</li> <li>Zoe computes that \\(n=61 \\times 53=3233\\).</li> </ul> </li> <li> <p>Compute \\(\\lambda(n)\\).</p> \\[ \\begin{equation}     \\lambda (n) = \\operatorname {lcm} (\\lambda (p), \\lambda (q)) = \\operatorname {lcm} (p-1, q-1) \\end{equation} \\] <p>Zoe computes that \\(\\lambda (n)=\\operatorname{lcm}(60, 52)=780\\).</p> </li> <li> <p>Choose an integer \\(e\\) such that \\(1&lt;e&lt;\\lambda (n)\\) and \\(e\\) is coprime to \\(\\lambda (n)\\).</p> <ul> <li>Shorter bit-length and smaller Hamming weight \\(e\\) has, more efficient encryption is.</li> <li>The most commonly chosen value is \\(2^{16}+1=65537\\).</li> <li>\\(e\\) is released as part of the public key.</li> <li>Let \\(e = 17\\).</li> </ul> </li> <li> <p>Determine \\(d\\), the modular multiplicative inverse of \\(e\\) modulo \\(\\lambda (n)\\).</p> <ul> <li>That means \\(e\u00b7d \\equiv1\\pmod{\\lambda (n)}\\). It's computed efficiently by Extended Euclidean algorithm.</li> <li>\\(d\\) is kept secret as the private key exponent.</li> <li>By solving the equation \\(e\u00b7d+k\\lambda(n)=1\\), Zoe gets \\(d=413\\).</li> </ul> </li> </ol> <p>Now, we get a public key \\((n, e)\\) and a private key \\((n, d)\\). For Zoe, they are \\((3233, 17)\\) and \\((3233, 413)\\).</p>"},{"location":"cs/algo/crypto/rsa.html#Encryption-and-Decryption","title":"Encryption and Decryption","text":"<p>For a plaintext message \\(m\\), the encryption function is</p> \\[ \\begin{equation}     c(m) = m^e \\pmod{n} \\end{equation} \\] <p>For an encrypted criphertext \\(c\\), the decryption function is</p> \\[ \\begin{equation}     m(c) = c^d \\pmod{n} \\end{equation} \\] <p>Assume that Zoe wants to encrypt \\(m = 65\\), then</p> \\[ \\begin{equation}     c=65^{17}\\pmod{3233}=2790 \\end{equation} \\] <p>EZ gets c and decrypts it to calculate</p> \\[ \\begin{equation}     m=2790^{413}\\pmod{3233}=65 \\end{equation} \\] <p>These calculations can be computed efficiently by Exponentiation by squaring.</p>"},{"location":"cs/algo/crypto/rsa.html#References","title":"References","text":"<ul> <li>RSA - Wikipedia</li> <li>Carmichael function - Wikipedia</li> <li>Euler's totient function - Wikipedia</li> <li>Fundamental theorem of arithmetic - Wikipedia</li> <li>Hamming weight - Wikipedia</li> </ul>"},{"location":"cs/algo/others/knuth-shuffle-algorithm.html","title":"Knuth-Shuffle Algorithm","text":""},{"location":"cs/algo/others/knuth-shuffle-algorithm.html#Question","title":"Question","text":"<p>Design a fair shuffle algorithm.</p>"},{"location":"cs/algo/others/knuth-shuffle-algorithm.html#Algorithm","title":"Algorithm","text":"<pre><code>for i from n to 1:\n    j = random(1,i)\n    swap(a[i], a[j])\n</code></pre> <p>What does fair mean? For generated permutation, every element chooses one of \\(n\\) positions with equal probability. It's to calculate the probability of element \\(i\\) being on position \\(j\\) by the Knuth-Shuffle algorithm.</p> <p>First\uff0celement \\(i\\) isn't selected when the position loops from \\(n-1\\) to \\(j+1\\), so the probabilities are \\(\\frac{n-1}{n}\\)\uff0c\\(\\frac{n-2}{n-1}\\)\uff0c...\uff0c\\(\\frac{j}{j+1}\\) separately.</p> <p>Then \\(i\\) is selected when comes to position \\(j\\), with the probability \\(\\frac{1}{j}\\). The product is exact \\(\\frac{1}{n}\\).</p>"},{"location":"cs/algo/others/knuth-shuffle-algorithm.html#Another-Solution","title":"Another Solution","text":"<p>Throw these elements into a pocket. Then sampling without replacement. The generated permutation is exactly the required shuffle result. Refer to drawing lots.</p> <pre><code>b[1,...,n] // where to store the result\nk=1\nfor i from n to 1:\n    j = random(1,i)\n    b[k++]=a[j]\n    remove(a[j])\n</code></pre> <p>This way occupies \\(O(n)\\) space more than Knuth-Shuffle. The latter apply a certain order to save space.</p>"},{"location":"cs/algo/others/monte-carlo-tree-search.html","title":"Monte Carlo Tree Search","text":""},{"location":"cs/algo/others/monte-carlo-tree-search.html#References","title":"References","text":"<ul> <li>Monte Carlo Tree Search - beginners guide Machine learning blog</li> </ul>"},{"location":"cs/algo/pattern-searching/kmp-algorithm.html","title":"KMP Algorithm","text":""},{"location":"cs/algo/pattern-searching/kmp-algorithm.html#Question","title":"Question","text":"<p>Given a text \\(txt[0,n-1]\\) and a pattern \\(pat[0,m-1]\\), write a function <code>search(char[] txt, char[] pat)</code> that prints all occurrences of pat[] within txt[]. You may assume that \\(n &gt; m\\).</p>"},{"location":"cs/algo/pattern-searching/kmp-algorithm.html#Brute-force","title":"Brute-force","text":"<pre><code>public int search(char[] txt, char[] pat) {\n    int i = 0, j = 0;\n    while (i &lt; txt.length &amp;&amp; j &lt; pat.length) {\n        if (txt[i] == pat[j]) {\n            i++;\n            j++;\n        } else {\n            i = i - j + 1;\n            j = 0;\n        }\n    }\n\n    if (j == pat.length) {\n        return i - j;\n    }\n\n    return -1;\n}\n</code></pre>"},{"location":"cs/algo/pattern-searching/kmp-algorithm.html#KMP-Algorithm","title":"KMP Algorithm","text":"<pre><code>// JAVA program for implementation of KMP pattern searching algorithm`\nvoid KMPSearch(String pat, String txt) {\n    int m = pat.length();\n    int n = txt.length();\n\n    // create lps[] that will hold the longest prefix suffix values for pattern\n    int lps[] = new int[m];\n    int j = 0; // index for p[]\n\n    // Preprocess the pattern (calculate lps[] array)\n    computeLPSArray(pat, m, lps);\n\n    int i = 0; // index for s[]\n    while (i &lt; n) {\n        if (pat.charAt(j) == txt.charAt(i)) {\n            j++;\n            i++;\n        }\n\n        if (j == m) {\n            System.out.println(\"Found pattern at index \" + (i - j));\n            j = lps[j - 1];\n        } else if (i &lt; N &amp;&amp; pat.charAt(j) != txt.charAt(i)) { // mismatch after j matches\n            // Do not match lps[0..lps[j-1]] characters, they will match anyway\n            if (j != 0)\n                j = lps[j - 1];\n            else\n                i = i + 1;\n        }\n    }\n}\n\nvoid computeLPSArray(String pat, int m, int lps[]) {\n    // length of the previous longest prefix suffix\n    int len = 0;\n    int i = 1;\n    lps[0] = 0; // lps[0] is always 0\n\n    // the loop calculates lps[i] for i = 1 to m-1\n    while (i &lt; m) {\n        if (pat.charAt(i) == pat.charAt(len)) {\n            len++;\n            lps[i] = len;\n            i++;\n        } else { // (pat[i] != pat[len])\n            // This is tricky. Consider the example.\n            // AAACAAAA and i = 7. The idea is similar\n            // to search step.\n            if (len != 0) {\n                len = lps[len - 1];\n\n                // Also, note that we do not increment\n                // i here\n            } else { // if (len == 0)\n                lps[i] = len;\n                i++;\n            }\n        }\n    }\n}\n\n// Driver program to test above function`\npublic static void main(String args[]) {\n    String txt = \"ABABDABACDABABCABAB\";\n    String pat = \"ABABCABAB\";\n    KMPSearch(pat, txt);\n}\n</code></pre>"},{"location":"cs/algo/pattern-searching/kmp-algorithm.html#References","title":"References","text":"<ul> <li>KMP Algorithm for Pattern Searching - GeeksforGeeks</li> <li>Knuth\u2013Morris\u2013Pratt algorithm - Wikipedia</li> </ul>"},{"location":"cs/algo/sort/index.html","title":"Sort","text":"<p>Given an array \\(A[0..n-1]\\)\uff0cand \\(n\\) is the length of the array. Sort elements of the array ascending.</p>"},{"location":"cs/algo/sort/index.html#Sort-Algorithms","title":"Sort Algorithms","text":"<ul> <li>Selection Sort</li> <li>Bubble Sort</li> <li>Insertion Sort</li> <li>Merge Sort</li> <li>Quick Sort</li> <li>Heap Sort</li> <li>Counting Sort</li> <li>Radix Sort</li> <li>Bucket Sort</li> <li>Topological Sort</li> <li>Shell Sort</li> </ul>"},{"location":"cs/algo/sort/bucket-sort.html","title":"Bucket Sort","text":""},{"location":"cs/algo/sort/bucket-sort.html#Overview","title":"Overview","text":"<p>Bucket sort is mainly useful when input is uniformly distributed over a range.</p> <p>For array \\(A[0,n-1]\\) to be sorted, if there exist a finite number of buckets \\(B[0,m-1]\\) and \\(B=f(A)\\) which means meeting definition of a function, bucket sort is applicable.</p>"},{"location":"cs/algo/sort/bucket-sort.html#Algorithm","title":"Algorithm","text":"<ul> <li>Analyze distributions of the source array \\(A\\) to decide the mapping relationship \\(f\\) and values of buckets \\(B\\).</li> <li>Iterate through \\(A\\) to move elements into corresponding buckets.</li> <li>Sort individual buckets, maybe with different sorting algorithms which decide the complexity of this algorithm.</li> <li>Concatenate all sorted buckets.</li> </ul>"},{"location":"cs/algo/sort/bucket-sort.html#Implementation","title":"Implementation","text":"<p>Assume that \\(0\\le A_i&lt;12\\) and all elements are integers. So we create 4 buckets, and the size of each bucket is 3.</p> <pre><code>def bucket_sort(arr):\n    # depend on features of the arr\n    bucket_num = 4\n    bucket_size = 3\n\n    buckets = []\n    for i in range(bucket_num):\n        buckets.append([])\n\n    # put array elements in different buckets\n    for x in arr:\n        bucket_index = int(x / bucket_size)\n        buckets[bucket_index].append(j)\n\n    # sort individual buckets\n    for i in range(bucket_num):\n        buckets[i] = sort(buckets[i]) # sorting algorithm to apply\n\n    # concatenate the result\n    k = 0\n    for i in range(bucket_num):\n        for j in range(len(buckets[i])):\n            arr[k] = buckets[i][j]\n            arr += 1\n    return arr\n</code></pre>"},{"location":"cs/algo/sort/bucket-sort.html#Time-Complexity","title":"Time Complexity","text":"<p>It depends on sorting algorithm chosen to sort individual buckets.</p>"},{"location":"cs/algo/sort/insertion-sort.html","title":"Insertion Sort","text":""},{"location":"cs/algo/sort/insertion-sort.html#Algorithm","title":"Algorithm","text":"INSERTION-SORT(A)<pre><code>for j = 1 to A.length\n    key = A[j]\n    i = j - 1\n    while i &gt; 0 and A[i] &gt; key\n        A[i+1] = A[i]\n        i--\n    A[i + 1] = key\n</code></pre> <p>The time complexity is \\(O(n^2)\\).</p>"},{"location":"cs/algo/sort/merge-sort.html","title":"Merge Sort","text":""},{"location":"cs/algo/sort/merge-sort.html#Algorithm","title":"Algorithm","text":"<p>Merge Sort is a divide-and-conquer algorithm.</p> <ol> <li>Divide the array in two halves.</li> <li>Sort each part with Merge Sort recursively.</li> <li>Merge the two halves. It's the core of the algorithm.</li> </ol>"},{"location":"cs/algo/sort/merge-sort.html#Implementation","title":"Implementation","text":"<pre><code>def merge_sort(arr):\n    \"\"\"\n    sort the arr\n    \"\"\"\n    if len(arr) &lt;= 1:\n        return\n    m = len(arr) // 2\n    left = arr[:m]\n    right = arr[m:]\n    merge_sort(left)\n    merge_sort(right)\n\n    # merge the two sorted halves\n    i = j = k = 0\n    while i &lt; len(left) and j &lt; len(right):\n        if left[i] &lt;= right[j]:\n            arr[k] = left[i]\n            i += 1\n        else:\n            arr[k] = right[j]\n            j += 1\n        k += 1\n    while i &lt; len(left):\n        arr[k] = left[i]\n        i += 1\n        k += 1\n    while j &lt; len(right):\n        arr[k] = right[j]\n        j += 1\n        k += 1\n</code></pre> <p>Its time complexity is \\(O(n\\log n)\\).</p>"},{"location":"cs/ds/index.html","title":"Index","text":""},{"location":"cs/ds/index.html#Data-Structures","title":"Data Structures","text":"<ul> <li>Array Data Structure</li> <li>Linked List Data Structure</li> <li>Stack Data Structure</li> <li>Queue Data Structure</li> <li>Binary Tree</li> <li>Binary Search Tree</li> <li>Heap</li> <li>Hashing Data Structure</li> <li>Graph Data Structure And Algorithms</li> <li>Matrix Data Structure</li> <li>Advanced Data Structures</li> </ul>"},{"location":"cs/ds/binary-search-tree.html","title":"Binary Search Tree","text":""},{"location":"cs/ds/binary-search-tree.html#Overview","title":"Overview","text":"<p>Binary Search Tree is a node-based binary tree data structure which has the following properties:</p> <ul> <li>All nodes' keys of left subtree are less than the node's key;</li> <li>All nodes' keys of right subtree are greater than the node's key;</li> <li>Each of the left and right subtree is a binary search tree.</li> </ul>"},{"location":"cs/ds/binary-tree.html","title":"Binary Tree","text":""},{"location":"cs/ds/binary-tree.html#Overview","title":"Overview","text":"<p>A binary tree is a tree whose elements have at most 2 children.</p>"},{"location":"cs/ds/disjoint-set.html","title":"Disjoint Set","text":""},{"location":"cs/ds/disjoint-set.html#Question","title":"Question","text":"<p>There is a condition that A &amp; C are related if A &amp; B and B &amp; C are both related. Given some relations, infer whether X &amp; Y are related.</p>"},{"location":"cs/ds/disjoint-set.html#Graph-Theory","title":"Graph Theory","text":"<p>By building an undirected graph, it turns to judge whether the two specified points are in the same connected subgraph.</p> <p>The structure is too large, with low efficiency.</p>"},{"location":"cs/ds/disjoint-set.html#Union-Find","title":"Union-Find","text":"<p>Build a set for A and A's relatives, another for B and B's relatives. Merge the set if A &amp; B are related. Whether X &amp; Y are related is equivalent to whether X &amp; Y are in the same set.</p> <p>There are two key operations as follows:</p> <ul> <li>Find: Determine which subset a particular element is in. This can be used for determining if two elements are in the same subset.</li> <li>Union: Join two subsets into a single subset.</li> </ul> <pre><code>/**\n * Build each set with tree structure whose root node is the representative element of the set.\n * Union: If two elements are related, merge trees where they are.\n * Find: Two elements are related if they have the same root.\n */\npublic class MergeFindSet {\n\n    // store parents of all the elements\n    private int[] parents;\n\n    //store the depths of trees\n    private int[] height;\n\n    // initialize every single element as a set\n    public MergeFindSet(int capacity) {\n        parents = new int[capacity];\n        height = new int[capacity];\n        for (int i = 0; i &lt; capacity; i++) {\n            parents[i] = i;\n            height[i] = 1;\n        }\n    }\n\n    // find root node of the tree where x is in, also known as the representative element of the set.\n    private int find(int x) {\n        int p = x;\n        while (p != parents[p]) {\n            p = parents[p];\n        }\n        return p;\n    }\n\n    // join two elements\n    public void join(int a, int b) {\n        int ap = find(a);\n        int bp = find(b);\n        if (height[ap] &gt; height[bp]) {\n            parents[bp] = ap;\n            height[bp] = 0;\n        } else {\n            parents[ap] = bp;\n            if (height[ap] == height[bp]) {\n                height[bp]++;\n            }\n            height[ap] = 0;\n        }\n    }\n\n    // if a and b are related\n    public boolean isRelated(int a, int b) {\n        return find(a) == find(b);\n    }\n\n    public static void main(String[] args) {\n        MergeFindSet mergeFindSet = new MergeFindSet(23);\n        mergeFindSet.join(1, 2);\n        mergeFindSet.join(2, 3);\n        mergeFindSet.join(3, 4);\n        mergeFindSet.join(2, 5);\n        mergeFindSet.join(6, 7);\n        mergeFindSet.join(7, 8);\n        mergeFindSet.join(8, 9);\n        mergeFindSet.join(10, 11);\n        mergeFindSet.join(12, 13);\n        mergeFindSet.join(14, 15);\n        mergeFindSet.join(15, 16);\n        mergeFindSet.join(17, 18);\n        mergeFindSet.join(21, 22);\n        mergeFindSet.join(2, 14);\n        System.out.println(mergeFindSet.isRelated(3, 16));\n    }\n}\n</code></pre>"},{"location":"cs/ds/disjoint-set.html#References","title":"References","text":"<ul> <li>Disjoint Set (Or Union-Find) | Set 1 (Detect Cycle in an Undirected Graph) - GeeksforGeeks</li> </ul>"},{"location":"cs/ds/heap.html","title":"Heap","text":""},{"location":"cs/ds/heap.html#Overview","title":"Overview","text":"<p>A Binary Heap is a Complete Binary Tree where items are stored in a special order such that value in a parent node is greater(or smaller) than the values in its two children nodes. The former is called as max heap and the latter is called min heap.</p> <p>The heap can be represented by array. If the parent node is stored at index \\(i\\), the left child can be calculated by \\(2i+1\\) and right child by \\(2i+2\\) (assuming the indexing starts at 0).</p>"},{"location":"cs/ds/heap.html#Implementation","title":"Implementation","text":"<pre><code>// Data structure of Heap\npublic class Heap&lt;V extends Comparable&lt;? super V&gt;&gt; {\n    V[] array;\n    int heapSize;// [0, array.length]\n\n    Heap(V[] array) {\n        this.array = array;\n        heapSize = array.length;\n        buildHeap();\n    }\n\n    // build a max heap\n    void buildHeap() {\n        for (int i = array.length / 2 - 1; i &gt;= 0; i--) {\n            heapify(i);\n        }\n    }\n\n    void heapify(int i){\n        while (true) {\n            int l = left(i), r = right(i), largest = i;\n            if (l &lt; heapSize &amp;&amp; array[l].compareTo(array[largest]) &gt; 0) {\n                largest = l;\n            }\n\n            if (r &lt; heapSize &amp;&amp; array[r].compareTo(array[largest]) &gt; 0) {\n                largest = r;\n            }\n\n            if (largest != i) {\n                swap(array, i, largest);\n            } else {\n                break;\n            }\n        }\n    }\n\n    /* common operations */\n\n    void insert(V key) {\n        if (heapSize == array.length) {\n            throw new ArrayIndexOutOfBoundsException();\n        }\n\n        heapSize++;\n        updateKey(heapSize - 1, key);\n    }\n\n    void delete(int i) {\n        if (isEmpty() || i &lt; 0 || i &gt;= heapSize) {\n            throw new ArrayIndexOutOfBoundsException();\n        }\n\n        updateKey(i, array[heapSize - 1]);\n        heapSize--;\n    }\n\n    void updateKey(int i, V key) {\n        if (i &gt;= heapSize) {\n            throw new IndexOutOfBoundsException();\n        }\n\n        array[i] = key;\n        heapify(i);\n        while (i &gt; 0 &amp;&amp; array[parent(i)].compareTo(array[i]) &lt; 0) {\n            swap(array, i, parent(i));\n            i = parent(i);\n        }\n    }\n\n    V getHead() {\n        return isEmpty() ? null : array[0];\n    }\n\n    V extractHead() {\n        if (isEmpty()) {\n            return null;\n        }\n\n        V max = getHead();\n        array[0] = array[heapSize-- - 1];\n        heapify(0);\n        return max;\n    }\n\n\n    /* Basic methods */\n\n    // Get index of parent node\n    int parent(int i) {\n        return (i - 1) &gt;&gt; 1;\n    }\n\n    // Get index of left child node\n    int left(int i) {\n        return (i &lt;&lt; 1) + 1;\n    }\n\n    // Get index of right child node\n    int right(int i) {\n        return (i + 1) &lt;&lt; 1;\n    }\n\n    int size() {\n        return heapSize;\n    }\n\n    boolean isEmpty() {\n        return heapSize == 0;\n    }\n}\n</code></pre>"},{"location":"cs/problem/inversion-pairs.html","title":"Inversion Pairs","text":"<p>Given an array \\(a_1, a_2, ..., a_n\\), count how many inversion pairs there are in the array. \\(a_i\\) and \\(a_j\\) are inversion pairs if \\(i&lt;j\\) and \\(a_i&gt;a_j\\). An example is as follows:</p> <pre><code>Input: [3, 1, 2]\nOutput: 2\n</code></pre>"},{"location":"cs/problem/inversion-pairs.html#Brute-force","title":"Brute-force","text":"<p>Use a nested loop whose time complexity is \\(O(n^2)\\).</p> <pre><code>def inversion_pairs(arr):\n    if not isinstance(arr, list) or len(arr) &lt;= 1:\n        return 0\n\n    result = 0\n    for j in range(1, len(arr)):\n        for i in range(j):\n            if arr[i] &gt; arr[j]:\n                result += 1\n    return result\n</code></pre>"},{"location":"cs/problem/inversion-pairs.html#Enhanced-Merge-Sort","title":"Enhanced Merge Sort","text":"<p>Like Merge Sort, the algorithm divides the array into two halves, counts and sorts the halves, then merges the two halves. Its time complexity is \\(O(n\\log{n})\\).</p> <pre><code>def inversion_pairs(arr):\n    temp = arr[:]\n    return _inversion_pairs(temp)\n\n\ndef _inversion_pairs(arr):\n    if len(arr) &lt;= 1:\n        return 0\n\n    m = len(arr) // 2\n    left = arr[:m]\n    right = arr[m:]\n    count = _inversion_pairs(left) + _inversion_pairs(right)\n\n    # merge the two sorted halves\n    i = j = k = 0\n    while i &lt; len(left) and j &lt; len(right):\n        if left[i] &lt;= right[j]:\n            arr[k] = left[i]\n            i += 1\n        else:\n            arr[k] = right[j]\n            count += (m - i)\n            j += 1\n        k += 1\n    while i &lt; len(left):\n        arr[k] = left[i]\n        i += 1\n        k += 1\n    while j &lt; len(right):\n        arr[k] = right[j]\n        j += 1\n        k += 1\n    return count\n</code></pre>"},{"location":"dev/fastdfs.html","title":"FasfDFS","text":""},{"location":"dev/fastdfs.html#%E6%A6%82%E8%BF%B0","title":"\u6982\u8ff0","text":"<p>FastFDS \u662f\u4e00\u4e2a\u7531C\u8bed\u8a00\u5b9e\u73b0\u7684\u5f00\u6e90\u7684\u8f7b\u91cf\u7ea7\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u3002</p> <p>FastDFS\u6709\u4e24\u4e2a\u89d2\u8272\uff1aTracker\uff0cStorage\uff1a</p> <ol> <li> <p>Tracker \u4e3b\u8981\u505a\u8c03\u5ea6\u4f5c\u7528\uff0c\u8d77\u5230\u8d1f\u8f7d\u5747\u8861\u7684\u4f5c\u7528\uff1b\u8d1f\u8d23\u7ba1\u7406\u6240\u6709\u7684Storage\u548cGroup\uff0c\u6bcf\u4e00\u4e2aStorage\u518d\u542f\u52a8\u540e\u4f1a\u8fde\u63a5Tracker\uff0c\u544a\u77e5\u81ea\u5df1\u6240\u5c5e\u7684Group\uff0c\u5e76\u4fdd\u6301\u5468\u671f\u5fc3\u8df3\uff1b</p> </li> <li> <p>Storage \u5b58\u50a8\u8282\u70b9\uff0c\u4e3b\u8981\u63d0\u4f9b\u5bb9\u91cf\u548c\u5907\u4efd\u670d\u52a1\uff1b\u4ee5Group\u4e3a\u5355\u4f4d\uff0c\u6bcf\u4e2aGroup\u5185\u53ef\u4ee5\u6709\u591a\u53f0Storage\uff0c\u6570\u636e\u4e92\u76f8\u5907\u4efd\u3002</p> </li> </ol>"},{"location":"dev/fastdfs.html#%E5%AE%89%E8%A3%85","title":"\u5b89\u88c5","text":"<p>\u5982\u679c Tracker \u548c Storage \u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\uff0c\u5219\u6bcf\u53f0\u670d\u52a1\u5668\u90fd\u9700\u8981\u5b89\u88c5\u3002</p>"},{"location":"dev/fastdfs.html#libfastcommon","title":"libfastcommon","text":"<pre><code>$ wget https://github.com/happyfish100/libfastcommon/archive/V1.0.7.tar.gz\n$ tar -zxvf V1.0.7.tar.gz\n\n$ cd libfastcommon-1.0.7\n$ ./make.sh\n$ ./make.sh install\n</code></pre>"},{"location":"dev/fastdfs.html#FastDFS","title":"FastDFS","text":"<pre><code>$ wget https://github.com/happyfish100/fastdfs/archive/V5.05.tar.gz\n$ tar -zxvf V5.05.tar.gz\n\n$ cd fastdfs-5.05\n$ ./make.sh\n$ ./make.sh install\n</code></pre> <p>\u5b89\u88c5\u6210\u529f\u540e\uff0c\u4f1a\u751f\u6210 <code>/etc/fdfs</code> \u76ee\u5f55\uff0c\u5305\u542b\u4e09\u4e2a\u914d\u7f6e\u7684\u793a\u4f8b\u6587\u4ef6\u3002</p>"},{"location":"dev/fastdfs.html#%E9%85%8D%E7%BD%AE-Tracker-%E5%92%8C-Storage","title":"\u914d\u7f6e Tracker \u548c Storage","text":"<p>\u5728 <code>/etc/fdfs</code> \u76ee\u5f55\u4e0b\uff0c\u590d\u5236\u5e76\u4fee\u6539\u914d\u7f6e\uff1a</p> <pre><code>$ cp tracker.conf.sample tracker.conf\n$ vim tracker.conf\n</code></pre> <p>\u5173\u952e\u914d\u7f6e\uff1a</p> <ol> <li>base_path \u8bbe\u7f6e\u6570\u636e\u5b58\u50a8\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a<code>/data/fastdfs/tracker</code></li> <li>port Tracker \u670d\u52a1\u7aef\u53e3\uff0c\u9ed8\u8ba4 22122</li> </ol> <p>Tracker \u670d\u52a1\u547d\u4ee4</p> <pre><code>$ fdfs_trackerd /etc/fdfs/tracker.conf start\n$ fdfs_trackerd /etc/fdfs/tracker.conf stop\n</code></pre> <p>\u542f\u52a8\u5b8c\u6210\u540e\uff0cbase_path \u5bf9\u5e94\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210 <code>data</code> \u548c <code>log</code> \u4e24\u4e2a\u76ee\u5f55\u3002</p> <p>\u5bf9\u4e8e Storage \u914d\u7f6e\u76f8\u4f3c\uff0c\u5728 <code>/etc/fdfs</code> \u76ee\u5f55\u4e0b\uff1a</p> <pre><code>$ cp storage.conf.sample storage.conf\n$ vim storage.conf\n</code></pre> <p>\u5173\u952e\u914d\u7f6e\uff1a</p> <ol> <li>base_path \u8bbe\u7f6e\u6570\u636e\u5b58\u50a8\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a<code>/data/fastdfs/storage</code></li> <li>port Tracker \u670d\u52a1\u7aef\u53e3\uff0c\u9ed8\u8ba4 23000</li> <li>tracker_server \u5bf9\u5e94 Tracker \u7684\u5730\u5740\uff0c\u5373 : <p>Storage \u670d\u52a1\u547d\u4ee4</p> <pre><code>$ fdfs_storaged /etc/fdfs/storage.conf start\n$ fdfs_storaged /etc/fdfs/storage.conf stop\n</code></pre> <p>\u542f\u52a8\u5b8c\u6210\u540e\uff0cbase_path \u5bf9\u5e94\u76ee\u5f55\u4e0b\u4e5f\u4f1a\u751f\u6210 <code>data</code> \u548c <code>log</code> \u4e24\u4e2a\u76ee\u5f55\uff0c\u5176\u4e2d <code>data</code> \u5373\u662f\u4e0a\u4f20\u6587\u4ef6\u7684\u5b58\u50a8\u76ee\u5f55\u3002</p>"},{"location":"dev/fastdfs.html#%E6%B5%8B%E8%AF%95","title":"\u6d4b\u8bd5","text":"<p>\u4efb\u610f\u673a\u5668\uff0c\u5728 <code>etc/fdfs</code> \u76ee\u5f55\u4e0b\uff0c\u590d\u5236\u4fee\u6539 client \u914d\u7f6e\uff1a</p> <pre><code>$ cp /etc/fdfs/client.conf.sample /etc/fdfs/client.conf\n$ vim /etc/fdfs/client.conf\n</code></pre> <p>\u5173\u952e\u914d\u7f6e\uff1a</p> <ol> <li>base_path \u8bbe\u7f6e\u65e5\u5fd7\u5b58\u50a8\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a<code>/data/fastdfs/client</code></li> <li>tracker_server \u5bf9\u5e94 Tracker \u7684\u5730\u5740\uff0c\u5373 : <p>\u4e0a\u4f20\u4efb\u610f\u6587\u4ef6\uff1a</p> <pre><code>$ fdfs_test /etc/fdfs/client.conf upload &lt;\u6587\u4ef6\u8def\u5f84&gt;\n</code></pre> <p>\u8fd4\u56de 'example file url' \u5373\u6210\u529f\uff0c\u540c\u65f6 Storage \u5b58\u50a8\u76ee\u5f55\u4e0b\u53ef\u4ee5\u53d1\u73b0\u4e0a\u4f20\u7684\u6587\u4ef6\u3002</p>"},{"location":"dev/fastdfs.html#HTTP-%E8%AE%BF%E9%97%AE","title":"HTTP \u8bbf\u95ee","text":"<p>\u5728 Nginx \u7684\u914d\u7f6e\u4e2d\u6dfb\u52a0 <code>location</code></p> <pre><code>location /group1/M00 {\n    alias /data/fastdfs/storage/data;\n}\n</code></pre>"},{"location":"dev/fastdfs.html#%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8","title":"\u5f00\u673a\u542f\u52a8","text":"<p>\u7f16\u8f91 <code>vim /etc/rc.d/rc.local</code> \u6dfb\u52a0\u542f\u52a8\u547d\u4ee4\uff1a</p> <pre><code>/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart\n/usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart\n</code></pre> <p>\u5982\u679c\u5931\u8d25\uff0c\u4e3a\u8be5\u6587\u4ef6\u6dfb\u52a0\u6743\u9650\uff1a</p> <pre><code>$ chmod +x /etc/rc.d/rc.local\n</code></pre>"},{"location":"dev/ftp.html","title":"FTP","text":""},{"location":"dev/ftp.html#Overview","title":"Overview","text":"<p>FTP</p>"},{"location":"dev/ftp.html#Get-Started","title":"Get Started","text":"<p>Install a FTP server on Linux and start service:</p> <pre><code>$ yum -y install vsftpd\n$ systemctl start vsftpd\n$ firewall-cmd --zone=public --add-port=21/tcp [--permanent]\n</code></pre> <p>Add a user for FTP:</p> <pre><code>$ useradd &lt;username&gt; -s /sbin/nologin # can't log in system\n$ password &lt;username&gt;\n</code></pre> <p>Customize relative configurations in /etc/vsftpd/vsftpd.conf like:</p> <pre><code>anonymous_enable=NO\n\nuserlist_enable=YES\nuserlist_deny=NO\nuserlist_file=/etc/vsftpd/user_list\n</code></pre> <p>Then edit /etc/vsftpd/user_list, commenting other users and adding  created above to specify the only user whose can access to FTP. Remember restarting the server. <p>Notes: Users in the file ftpusers are always forbidden for security. If <code>userlist_enable=NO</code>, all users except those in ftpusers are allowed to access to the server. If <code>userlist_enable=YES</code>, who can access to the server depends on the file specified by <code>userlist_file</code>. It's a blacklist when <code>userlist_deny=YES</code>, otherwise, it's a whitelist.</p> <p>Access to the server (here is from Command Line):</p> <pre><code>$ ftp &lt;ip&gt;\n$ User(ip:(none)): anonymous # it will fail if anonymous_enable is set NO.\n$ password: # no password\nLogin successful.\nftp&gt; \n</code></pre>"},{"location":"dev/git.html","title":"Git","text":""},{"location":"dev/git.html#Overview","title":"Overview","text":"<p>Git is a free and open source distributed version control system. Here are the official documentations and those for liaoxuefeng's wiki.</p>"},{"location":"dev/git.html#gitignore","title":".gitignore","text":"<p>**Notes: **</p>"},{"location":"dev/git.html#Principle","title":"Principle","text":"<ol> <li>Ignore files automatically generated by the system or environment, such as thumbnails by Windows, <code>.idea</code> directory by IntelliJ IDEA.</li> <li>Ignore intermediate files generated from compiling, such as <code>.class</code> compiled by Java.</li> <li>Ignore files that contain private information, such as configuration file of password or token.</li> </ol>"},{"location":"dev/git.html#Rules","title":"Rules","text":"<ol> <li>A blank line matches no files.</li> <li>A line starting with <code>#</code> serves as a comment.</li> <li>An optional prefix <code>!</code> which negates the pattern. It is not possible to re-include a file if a parent directory of that file is excluded.</li> <li>The slash <code>/</code> is used as the directory separator.</li> <li>If there is a separator <code>/</code> at the end of the pattern then the pattern will only match directories.</li> <li><code>**</code> matches multi-directories.</li> <li><code>?</code> and <code>[]</code> are the same as those in regular expression.</li> </ol> <p>For example:</p> <ol> <li><code>/dir</code> to ignore the whole directory</li> <li><code>*.zip</code> to ignore all the files ending with '.zip'</li> <li><code>/dir/main.txt</code> to ignore the specified file</li> <li><code>!/dir/main.txt</code> not to ignore the file</li> </ol>"},{"location":"dev/git.html#Notes","title":"Notes","text":"<p>Files already tracked by Git are not affected. To stop tracking a file that is currently tracked, use <code>git rm --cached</code>.</p> <pre><code>$ git rm -r --cached target\n$ git commit -m '.gitignore'\n</code></pre>"},{"location":"dev/linux.html","title":"Linux","text":"<p>With the same Linux Kernel, there are different distributions of Linux based on different modes of software management, such as CentOS based on RPM and Ubuntu on DPKG.</p>"},{"location":"dev/linux.html#Installation","title":"Installation","text":"<p>Download and install CentOS ISO. Without a server, VMware is an option where to install the system.</p>"},{"location":"dev/linux.html#Remote-Connection","title":"Remote Connection","text":"<p>If the system needs to be connected to remotely, XShell is a fine tool and SSH which is commonly configured on the Linux is required. Check with <code>service sshd status</code>. If not, execute following commands in order:</p> <ul> <li><code>yum install openssh-server</code> installs SSH</li> <li><code>vim /etc/ssh/ssh_config</code> edits the configuration file</li> <li><code>/bin/systemctl start sshd.service</code> starts SSH service</li> <li><code>/bin/systemctl enable sshd.service</code> starts the service at startup.</li> </ul> <p>Most remote connections like MySQL and Redis support connection through SSH. In this case, <code>AllowTcpForwarding yes</code> is required to set in the /etc/ssh/sshd_config.</p>"},{"location":"dev/linux.html#Mirror","title":"Mirror","text":"<p>Change mirror to aliyun:</p> <ul> <li>base: <code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</code></li> <li>epel: <code>wget -O /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo</code></li> </ul> <p>Execute <code>yum clean all</code> to update mirrors and <code>yum makecache</code> to create caches.</p>"},{"location":"dev/linux.html#Directory","title":"Directory","text":"<p>Directories of RPM are commonly set as following by default:</p> <ul> <li>/etc: configuration files</li> <li>/usr/bin: executable files</li> <li>/usr/lib: dynamic libraries</li> <li>/usr/share/doc: use documentations</li> <li>/usr/share/man: man page files</li> </ul>"},{"location":"dev/linux.html#Get-Started","title":"Get Started","text":"<p>Linux is a multi-user system with limits of authority. Use <code>su</code> command to access system as root when logging in as a common user and <code>exit</code> to get back.</p>"},{"location":"dev/linux.html#Development-Tools","title":"Development Tools","text":"<p>Install common development tools.</p> <pre><code>yum -y groupinstall \"Development tools\"\nyum install -y bash-completion vim lrzsz wget expect net-tools nc nmap tree dos2unix htop iftop iotop unzip telnet sl psmisc nethogs glances bc\n</code></pre>"},{"location":"dev/linux.html#System-and-Partitions","title":"System and Partitions","text":"<p>Each hardware device in Linux is regarded as a file. They are almost all under /dev directory.</p>"},{"location":"dev/linux.html#Service","title":"Service","text":"<p>Relative commands are shown as follows:</p> <pre><code>/bin/systemctl start &lt;service&gt;\nservice &lt;service&gt; status\n/bin/systemctl enable &lt;service&gt; # start at startup\n</code></pre>"},{"location":"dev/linux.html#User-and-Privilege","title":"User and Privilege","text":"<ul> <li><code>id</code> show ids</li> <li><code>useradd</code> add a new user</li> <li><code>passwd [username]</code> change password for users</li> </ul>"},{"location":"dev/linux.html#Files-and-Directories-Management","title":"Files and Directories Management","text":""},{"location":"dev/linux.html#Path","title":"Path","text":"<p>Absolute paths start with the root path /, such as /usr/share/doc. But on the contrary, relative paths don't start with /, share/etc for example.</p>"},{"location":"dev/linux.html#Commands","title":"Commands","text":"<p>Use -help to list some options of the command or use man/info commands to show details, such as man cd. Following are some common commands.</p>"},{"location":"dev/linux.html#Directory_1","title":"Directory","text":"<ul> <li><code>cd</code> change directory</li> <li><code>pwd</code> print working directory</li> <li><code>mkdir</code> make a directory by a level. Append -p after the command if recursion is required.</li> <li><code>rmdir</code> remove an empty directory by a level. Append -p if recursion is required.</li> </ul>"},{"location":"dev/linux.html#Operator","title":"Operator","text":"<ul> <li><code>ls</code> list</li> <li><code>cp</code> copy</li> <li><code>rm</code> remove</li> <li><code>mv</code> move</li> </ul>"},{"location":"dev/linux.html#Text-Document","title":"Text Document","text":"<ul> <li><code>cat</code> concatenate content of file</li> <li><code>tac</code> concatenate content in reverse direction</li> <li><code>nl</code> print with line numbers</li> <li><code>more</code> print one page. Click Space to next page or Enter to next line.</li> <li><code>less</code> familiar to <code>more</code></li> <li><code>head</code> defaults to the first 10 lines</li> <li><code>tail</code> familiar to <code>head</code></li> </ul>"},{"location":"dev/linux.html#Upload-and-Download","title":"Upload and Download","text":"<p>Install toolkit rz and sz by <code>yum install lrzsz</code>. Then use commands <code>rz</code> to upload or <code>sz</code> to download. Target files will be upload to current directory.</p>"},{"location":"dev/linux.html#Vim","title":"Vim","text":""},{"location":"dev/linux.html#Misc","title":"Misc","text":""},{"location":"dev/linux.html#Firewall","title":"Firewall","text":"<p>The service name is firewalld and the command is firewall-cmd.</p> <p>Open the specific port when remote connections are refused.</p> <pre><code>firewall-cmd --zone=public --add-port=&lt;port/tcp&gt; [--permanent]\n</code></pre>"},{"location":"dev/linux.html#FAQ","title":"FAQ","text":""},{"location":"dev/linux.html#Pane-is-dead","title":"Pane is dead","text":"<p>If it occurs to Pane is dead when installing, open settings of hardwares and then change CD/DVD (IDE) connection to the path of the ISO file.</p>"},{"location":"dev/linux.html#Connect-to-Internet","title":"Connect to Internet","text":"<p>If failed, open settings of current network connection of the host and allow Internet Connection Sharing.</p>"},{"location":"dev/linux.html#Static-IP","title":"Static IP","text":"<p>Edit the /etc/sysconfig/network-scripts/ifcfg-ens33 file:</p> <pre><code>BOOTPROTO=\"static\"\nIPADDR=&lt;ip&gt;\nNETMASK=255.255.255.0\nGATEWAY=&lt;gateway&gt; # same as that of the host\nDNS1=&lt;dns1&gt; # also same as those of the host\nDNS2=&lt;dns2&gt;\n</code></pre>"},{"location":"dev/linux.html#References","title":"References","text":"<ol> <li>Linux \u6559\u7a0b | \u83dc\u9e1f\u6559\u7a0b</li> <li>\u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc\\i</li> </ol>"},{"location":"dev/nginx.html","title":"Nginx","text":""},{"location":"dev/nginx.html#Overview","title":"Overview","text":"<p>Nginx is an HTTP and reverse proxy server.</p>"},{"location":"dev/nginx.html#Installation","title":"Installation","text":"<p>For Windows, download here and unzip the file.</p>"},{"location":"dev/nginx.html#Get-Started","title":"Get Started","text":"<p>Start Nginx and open address http://localhost to get a welcome page.</p> <pre><code>$ start nginx\n</code></pre>"},{"location":"dev/oauth.html","title":"Oauth","text":"<p>OAuth is an open standard for access delegation, commonly used as a way for Internet users to grant websites or applications access to their information on other websites but without giving them the passwords. This is based on OAuth 2.0.</p>"},{"location":"dev/oauth.html#Roles","title":"Roles","text":"<ul> <li>User the owner of the resources</li> <li>Client the third application</li> <li>Authorization Server server to grant authorization</li> <li>Resource Server server to get resources</li> </ul>"},{"location":"dev/oauth.html#Authorization-Mode","title":"Authorization Mode","text":"<ul> <li>Client requests authorization from User.</li> <li>Authorization Server sends an authorization code to Client if User agreed.</li> <li>Client requests tokens from Authorization Server with the authorization code.</li> <li>Authorization Server returns an access token after confirming authorization.</li> <li>Client requests resources from Resource Server with the access token.</li> <li>Resource Server returns resources after verifying the token.</li> </ul> <p>Generally, an authorization code will expire in 10min and could be used only once. If an code is applied more than once, hijacked by an hacker for example, the access token verified by the code will turn invalid.</p> <p>As for an access token, valid time is 2h.</p>"},{"location":"dev/oauth.html#References","title":"References","text":"<ol> <li>OAuth - Wikipedia</li> <li>\u7406\u89e3OAuth 2.0 - \u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7</li> </ol>"},{"location":"dev/references.html","title":"References","text":""},{"location":"dev/references.html#Priority-of-Operators","title":"Priority of Operators","text":"\u4f18\u5148\u7ea7 \u8fd0\u7b97\u7b26 \u7ed3\u5408\u6027 1 ()\u3001[] \u4ece\u5de6\u5411\u53f3 2 !\u3001+\u3001-\u3001~\u3001++\u3001-- \u4ece\u53f3\u5411\u5de6 3 *\u3001/\u3001% \u4ece\u5de6\u5411\u53f3 4 +\u3001- \u4ece\u5de6\u5411\u53f3 5 \u00ab\u3001\u00bb\u3001&gt;&gt;&gt; \u4ece\u5de6\u5411\u53f3 6 &lt;\u3001&lt;=\u3001&gt;\u3001&gt;=\u3001instanceof \u4ece\u5de6\u5411\u53f3 7 ==\u3001!= \u4ece\u5de6\u5411\u53f3 8 &amp; \u4ece\u5de6\u5411\u53f3 9 ^ \u4ece\u5de6\u5411\u53f3 10 | 11 &amp;&amp; \u4ece\u5de6\u5411\u53f3 12 || 13 ?: \u4ece\u53f3\u5411\u5de6 14 =\u3001+=\u3001-=\u3001*=\u3001/=\u3001&amp;=\u3001|=\u3001^=\u3001~=\u3001\u00ab=\u3001\u00bb=\u3001&gt;&gt;&gt;= \u4ece\u53f3\u5411\u5de6"},{"location":"dev/api/douban.html","title":"Douban","text":""},{"location":"dev/api/douban.html#Overview","title":"Overview","text":"<p>Refer to API documenetations.</p> <p>Notes: Its base url is https://api.douban.com and the method of the request is GET unless otherwise stated.</p>"},{"location":"dev/api/douban.html#OAuth","title":"OAuth","text":"<p>Douban supports three ways of OAuth.</p>"},{"location":"dev/api/douban.html#User","title":"User","text":""},{"location":"dev/api/douban.html#UserInfo","title":"UserInfo","text":"<p>/v2/user/{user_id} Example: https://api.douban.com/v2/user/1000001</p>"},{"location":"dev/api/douban.html#Movie","title":"Movie","text":""},{"location":"dev/api/douban.html#subject","title":"subject","text":"<p>Refer to .</p> <pre><code>/v2/movie/subject/{subject_id}\n</code></pre> <pre><code>{\n  \"id\": \"1764796\",\n  \"title\": \"\u673a\u5668\u4eba9\u53f7\",\n  \"original_title\": \"9\",\n  \"aka\": [\"9\uff1a\u672b\u4e16\u51b3\u6218\", \"\u4e5d\", \"Number 9\", \"\u673a\u5668\u4eba9\u53f7\"],\n  \"alt\": \"https://movie.douban.com/subject/1764796/\",\n  \"mobile_url\": \"https://movie.douban.com/subject/1764796/mobile\",\n  \"year\": \"2009\",\n  \"languages\": [\"\u82f1\u8bed\"],\n  \"countries\": [\"\u7f8e\u56fd\"],\n  \"genres\": [\"\u79d1\u5e7b\", \"\u52a8\u753b\"], // 3 at most\n  \"durations\": [\"79 \u5206\u949f\"],\n  \"subtype\": \"movie\", // movie/tv\n  \"mainland_pubdate\": \"\",\n  \"pubdates\": [\"2009-09-09(\u7f8e\u56fd)\"],\n  \"pubdate\": \"\", // deprecated\n  \"share_url\": \"http://m.douban.com/movie/subject/1764796\",\n  \"website\": \"\",\n  \"douban_site\": \"\",\n  \"images\": {\n    \"small\": \"http://img1.doubanio.com/view/photo/s_ratio_poster/public/p494268647.jpg\",\n    \"large\": \"http://img1.doubanio.com/view/photo/s_ratio_poster/public/p494268647.jpg\",\n    \"medium\": \"http://img1.doubanio.com/view/photo/s_ratio_poster/public/p494268647.jpg\"\n  },\n  \"has_schedule\": false, // \u5f71\u8baf\n  \"schedule_url\": \"\", // movie only\n  \"bloopers\": [], // \u82b1\u7d6e\n  \"blooper_urls\": [],\n  \"trailers\": [], // \u9884\u544a\u7247\n  \"trailer_urls\": [], // 4 at most\n  \"clips\": [], // \u7247\u6bb5\n  \"clip_urls\": [], // 4 at most\n  \"tags\": [\"\u52a8\u753b\", \"\u79d1\u5e7b\",...],\n  \"wish_count\": 19347,\n  \"do_count\": null, // defaults to 0 if tv else null\n  \"collect_count\": 92273,\n  \"seasons_count\": null, // tv only\n  \"current_season\": null, // tv only\n  \"episodes_count\": null, // tv only\n  \"summary\": \"\u673a\u5668\u4eba9\u53f7\uff08\u4f0a\u5229\u4e9a\u2022\u4f0d\u5fb7 Elijah Wood \u9970\uff09\u7a81\u7136\u9192\u6765\uff0c\u2026\u2026\u00a9\u8c46\u74e3\",\n  \"collection\": null,\n  \"has_ticket\": false,\n  \"ratings_count\": 67399,\n  \"rating\": {\n    \"max\": 10,\n    \"average\": 7.5,\n    \"details\": {\n      \"1\": 212.0,\n      \"3\": 16543.0,\n      \"2\": 1640.0,\n      \"5\": 8213.0,\n      \"4\": 22969.0\n    },\n    \"stars\": \"40\",\n    \"min\": 0\n  },\n  \"directors\": [], // refer to #simple-celebrity\n  \"writers\": [], // ditto\n  \"casts\": [], // ditto, 4 at most\n  \"comments_count\": 10042, // short ones\n  \"popular_comments\": [], // first 10, refer to #comment\n  \"photos_count\": 145,\n  \"photos\": [], // first 10, refer to #simple-photo\n  \"reviews_count\": 308, // former ones, commonly in the form of articles\n  \"popular_reviews\": [], // first 10, refer to #simple-review\n  \"has_video\": true,\n  \"videos\": [\n    {\n      \"source\": {\n        \"literal\": \"qq\",\n        \"pic\": \"http://img3.doubanio.com/f/movie/0a74f4379607fa731489d7f34daa545df9481fa0/pics/movie/video-qq.png\",\n        \"name\": \"\u817e\u8baf\u89c6\u9891\"\n      },\n      \"sample_link\": \"http://v.qq.com/x/cover/uzuqdig87eggmiw.html?ptag=douban.movie\",\n      \"video_id\": \"uzuqdig87eggmiw\",\n      \"need_pay\": true\n    }\n  ]\n}\n</code></pre>"},{"location":"dev/api/douban.html#photos","title":"photos","text":"<p>Refer to Photo and Simple Subject.</p> <pre><code>/v2/movie/subject/{subject_id}/photos?start=0&amp;count=20\n</code></pre> <pre><code>{\n  \"start\": 0,\n  \"count\": 20,\n  \"total\": 48,\n  \"photos\": [], // refer to #photo\n  \"subject\": {} // refer to #simple-subject\n}\n</code></pre>"},{"location":"dev/api/douban.html#reviews","title":"reviews","text":"<p>Refer to Review and Simple Subject.</p> <pre><code>/v2/movie/subject/{subject_id}/reviews?start=0&amp;count=20\n</code></pre> <pre><code>{\n  \"start\": 0,\n  \"count\": 20,\n  \"next_start\": 20,\n  \"total\": 9750,\n  \"reviews\": [], // refer to #review\n  \"subject\": {} // refer to #simple-subject\n}\n</code></pre>"},{"location":"dev/api/douban.html#comments","title":"comments","text":"<p>Refer to Comment and Simple Subject.</p> <pre><code>/v2/movie/subject/{subject_id}/comments?start=0&amp;count=20\n</code></pre> <pre><code>{\n  \"start\": 0,\n  \"count\": 20,\n  \"next_start\": 20,\n  \"total\": 392428,\n  \"comments\": [], // refer to #comment\n  \"subject\": {} // refer to #simple-subject\n}\n</code></pre>"},{"location":"dev/api/douban.html#celebrity","title":"celebrity","text":"<p>Refer to Simple Subject and Simple Photo.</p> <pre><code>/v2/movie/celebrity/{celebrity_id}\n</code></pre> <pre><code>{\n  \"id\": \"1054521\",\n  \"name\": \"\u8482\u59c6\u00b7\u7f57\u5bbe\u65af\",\n  \"name_en\": \"Tim Robbins\",\n  \"alt\": \"https://movie.douban.com/celebrity/1054521/\",\n  \"mobile_url\": \"https://movie.douban.com/celebrity/1054521/mobile\",\n  \"avatars\": {\n    \"small\": \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p17525.jpg\",\n    \"large\": \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p17525.jpg\",\n    \"medium\": \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p17525.jpg\"\n  },\n  \"summary\": \"\u8482\u59c6\u00b7\u7f57\u5bbe\u65af\uff0c\u539f\u540d\u8482\u83ab\u897f\u00b7\u4f5b\u6717\u897f\u65af\u00b7\u7f57\u5bbe\u65af\uff08Timothy Francis Robbins\uff09\uff0c...\",\n  \"aka\": [],\n  \"aka_en\": [\"Timothy Francis Robbins (\u672c\u540d)\"],\n  \"website\": \"\",\n  \"gender\": \"\u7537\",\n  \"birthday\": \"1958-10-16\",\n  \"born_place\": \"\u7f8e\u56fd,\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde,\u897f\u79d1\u7ef4\u7eb3\",\n  \"professions\": [\"\", \"\", \"\u5bfc\u6f14\", \"\u5236\u7247\u4eba\", \"\u7f16\u5267\"],\n  \"constellation\": \"\u5929\u79e4\u5ea7\",\n  \"works\": [], // 5 at most, refer to #simple-subject\n  \"photos\": [], // 10 at most, refer to #simple-photo\n}\n</code></pre>"},{"location":"dev/api/douban.html#photos_1","title":"photos","text":"<p>Refer to Photo and Simple Celebrity.</p> <pre><code>/v2/movie/celebrity/{celebrity_id}/photos?start=0&amp;count=20\n</code></pre> <pre><code>{\n  \"start\": 0,\n  \"count\": 20,\n  \"total\": 58,\n  \"photos\": [], // refer to #photo\n  \"celebrity\": {} // refer to #simple-celebrity\n}\n</code></pre>"},{"location":"dev/api/douban.html#works","title":"works","text":"<p>Refer to Simple Subject and Simple Celebrity.</p> <pre><code>/v2/movie/celebrity/{celebrity_id}/works?start=0&amp;count=20\n</code></pre> <pre><code>{\n  \"start\": 0,\n  \"count\": 20,\n  \"total\": 89,\n  \"works\": [], // refer to #simple-subject\n  \"celebrity\": {} // refer to #simple-celebrity\n}\n</code></pre>"},{"location":"dev/api/douban.html#top250","title":"top250","text":"<p>Refer to Simple Subject.</p> <pre><code>/v2/movie/top250?start=0&amp;count=20\n</code></pre> <pre><code>{\n    \"count\": 20,\n    \"start\": 0,\n    \"total\": 250,\n    \"subjects\": [], // refer to #simple-subject\n    \"title\": \"\u8c46\u74e3\u7535\u5f71Top250\"\n}\n</code></pre>"},{"location":"dev/api/douban.html#weekly","title":"weekly","text":"<p>Refer to Simple Subject.</p> <pre><code>/v2/movie/weekly\n</code></pre> <pre><code>{\n    \"subjects\": [], // refer to #simple-subject\n    \"title\": \"\u8c46\u74e3\u7535\u5f71\u672c\u5468\u53e3\u7891\u699c\"\n}\n</code></pre>"},{"location":"dev/api/douban.html#new-movies","title":"new movies","text":"<p>Refer to Simple Subject.</p> <pre><code>/v2/movie/new_movies\n</code></pre> <pre><code>{\n    \"subjects\": [], // refer to #simple-subject\n    \"title\": \"\u8c46\u74e3\u7535\u5f71\u65b0\u7247\u699c\"\n}\n</code></pre>"},{"location":"dev/api/douban.html#in-theaters","title":"in theaters","text":"<p>Refer to Simple Subject.</p> <pre><code>/v2/movie/in_theaters?start=0&amp;count=20&amp;city=\u5317\u4eac\n</code></pre> <pre><code>{\n    \"count\": 20,\n    \"start\": 0,\n    \"total\": 0,\n    \"subjects\": [], // refer to #simple-subject\n    \"title\": \"\u6b63\u5728\u4e0a\u6620\u7684\u7535\u5f71-\u5317\u4eac\"\n}\n</code></pre>"},{"location":"dev/api/douban.html#coming-soon","title":"coming soon","text":"<p>Refer to Simple Subject.</p> <pre><code>/v2/movie/coming_soon?start=0&amp;count=20\n</code></pre> <pre><code>{\n    \"count\": 20,\n    \"start\": 0,\n    \"total\": 0,\n    \"subjects\": [], // refer to #simple-subject\n    \"title\": \"\u5373\u5c06\u4e0a\u6620\u7684\u7535\u5f71\"\n}\n</code></pre>"},{"location":"dev/api/douban.html#Appendices","title":"Appendices","text":""},{"location":"dev/api/douban.html#Simple-Subject","title":"Simple Subject","text":"<p>Refer to Simple Celebrity.</p> <pre><code>{\n    \"id\": \"1292052\",\n    \"title\": \"\u8096\u7533\u514b\u7684\u6551\u8d4e\",\n    \"original_title\": \"The Shawshank Redemption\",\n    \"alt\": \"https://movie.douban.com/subject/1292052/\",\n    \"images\": {\n        \"small\": \"http://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.jpg\",\n        \"large\": \"http://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.jpg\",\n        \"medium\": \"http://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.jpg\"\n    },\n    \"rating\": {\n        \"max\": 10,\n        \"average\": 9.7,\n        \"details\": {\n            \"1\": 1546.0,\n            \"3\": 20660.0,\n            \"2\": 1258.0,\n            \"5\": 1335300.0,\n            \"4\": 210663.0\n        },\n        \"stars\": \"50\",\n        \"min\": 0\n    },\n    \"mainland_pubdate\": \"\",\n    \"pubdates\": [\"1994-09-10(\u591a\u4f26\u591a\u7535\u5f71\u8282)\", \"1994-10-14(\u7f8e\u56fd)\"],\n    \"year\": \"1994\",\n    \"genres\": [\"\u72af\u7f6a\", \"\u5267\u60c5\"],\n    \"durations\": [\"142\u5206\u949f\"],\n    \"subtype\": \"movie\",\n    \"collect_count\": 2839928,\n    \"casts\": [], // refer to #simple-celebrity\n    \"directors\": [], // ditto\n    \"has_video\": true,\n}\n</code></pre>"},{"location":"dev/api/douban.html#Simple-Celebrity","title":"Simple Celebrity","text":""},{"location":"dev/api/douban.html#Book","title":"Book","text":""},{"location":"dev/api/douban.html#Info","title":"Info","text":"<p>/v2/book/{book_id}</p>"},{"location":"dev/api/douban.html#Response","title":"Response","text":""},{"location":"dev/api/douban.html#Appendices_1","title":"Appendices","text":""},{"location":"dev/api/douban.html#Simple-Celebrity_1","title":"Simple Celebrity","text":"<pre><code>{\n    \"id\": \"1276787\",\n    \"name\": \"\u7533\u00b7\u963f\u514b\",\n    \"name_en\": \"Shane Acker\",\n    \"alt\": \"https://movie.douban.com/celebrity/1276787/\",\n    \"avatars\": {\n        \"small\": \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1351678808.44.jpg\",\n        \"large\": \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1351678808.44.jpg\",\n        \"medium\": \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1351678808.44.jpg\"\n    }\n}\n</code></pre>"},{"location":"dev/db/redis.html","title":"Redis","text":"<p>Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker.</p>"},{"location":"dev/db/redis.html#Installation","title":"Installation","text":""},{"location":"dev/db/redis.html#Linux","title":"Linux","text":"<p>Install Redis with <code>yum install redis</code> or from source code as follows:</p> <ol> <li>Download Redis here.</li> <li>Upload to the VM.</li> <li>Unzip the file: <code>tar \u2013zxvf redis-x.x.x.tar.gz</code></li> <li>Open the unzipped directory and compile Redis with <code>make</code>, .c files compiled to .o files. Install gcc with <code>yum install gcc-c++</code> if gcc is unavailable.</li> <li>Install Redis to target directory with <code>make install PREFIX=/usr/local/redis</code>. Several executable files are available now under the target directory, such as redis-cli, redis-server.</li> <li>Copy redis.conf to the installation directory. Modify relative configurations if necessary.</li> <li>Execute redis-server directly to start Redis server in the front. Then execute redis-cli to connect to the server.</li> <li>Configure <code>daemonize yes</code> in the redis.conf and start the server with the specified configuration file, so the server can run in the background.</li> </ol> <p>Start Redis at startup with <code>systemctl enable redis</code>.</p>"},{"location":"dev/db/redis.html#Windows","title":"Windows","text":"<p>The Microsoft Open Tech group instead of the official offer Redis for Windows. Follow the instructions to install Redis and then set Redis as Windows service.</p> <pre><code>redis-server --service-install [redis.windows-service.conf] --service-name [redis] --port [6380]\n</code></pre>"},{"location":"dev/db/redis.html#Notes","title":"Notes","text":"<p>Set different configuration files, service names and ports for different instances of Redis if needed.</p> <p>Modify <code>bind 127.0.0.1</code> when connecting remotely, otherwise the server can't be accessed to except localhost. Open the port that may be forbidden by firewall when remote connection is refused.</p> <p>Connecting through SSH is also optional.</p>"},{"location":"dev/db/redis.html#Configuration","title":"Configuration","text":"<p>Configure options in the redis.conf file.</p> <ul> <li>bind [host1] [host2]</li> <li>requirepass [password]</li> </ul>"},{"location":"dev/db/sqlite.html","title":"SQLite","text":"<p>SQLite is a C-language and small SQL database engine.</p>"},{"location":"dev/db/sqlite.html#Get-Started","title":"Get Started","text":"<p>Almost every distribution of Linux preinstalls SQLite. Use <code>sqlite3</code> to check and enter the prompt.</p>"},{"location":"dev/db/sqlite.html#Commands","title":"Commands","text":"<p>Commands of SQLite start with a dot <code>.</code> which doesn't end with <code>;</code>. Refer to details of all commands by <code>.help</code>.</p> <pre><code>-- instructions\n.help\n-- values of settings\n.show\n-- display of headers of tables\n.header on\n-- Left-aligned column for output\n.mode column\n-- schema of table 'sqlite-master'\n.schema sqlite_master\n</code></pre>"},{"location":"dev/db/sqlite.html#Datatypes","title":"Datatypes","text":"<p>SQLite uses a more general dynamic type system. In SQLite, the datatype of a value is associated with the value itself, not with its container - the particular column in which the value is stored.</p> <p>Each value stored in an SQLite database (or manipulated by the database engine) has one of the following storage classes:</p> <ul> <li>NULL. The value is a NULL value.</li> <li>INTEGER. The value is a signed integer, stored in 1, 2, 3, 4, 6, or 8 bytes depending on the magnitude of the value.</li> <li>REAL. The value is a floating point value, stored as an 8-byte IEEE floating point number.</li> <li>TEXT. The value is a text string, stored using the database encoding (UTF-8, UTF-16BE or UTF-16LE).</li> <li>BLOB. The value is a blob of data, stored exactly as it was input.</li> </ul> <p>Any column in an SQLite version 3 database, except an INTEGER PRIMARY KEY column, may be used to store a value of any storage class.</p>"},{"location":"dev/db/sqlite.html#Boolean-and-Datetime","title":"Boolean and Datetime","text":"<p>SQLite does not have a separate Boolean storage class. Instead, Boolean values are stored as integers 0 (false) and 1 (true).</p> <p>SQLite does not have a storage class set aside for storing dates and/or times. Instead, the built-in Date And Time Functions of SQLite are capable of storing dates and times as TEXT, REAL, or INTEGER values:</p> <ul> <li>TEXT as ISO8601 strings (\"YYYY-MM-DD HH:MM:SS.SSS\").</li> <li>REAL as Julian day numbers, the number of days since noon in Greenwich on November 24, 4714 B.C. according to the proleptic Gregorian calendar.</li> <li>INTEGER as Unix Time, the number of seconds since 1970-01-01 00:00:00 UTC.</li> </ul> <p>Applications can chose to store dates and times in any of these formats and freely convert between formats using the built-in date and time functions.</p>"},{"location":"dev/db/sqlite.html#Type-Affinity","title":"Type Affinity","text":""},{"location":"dev/db/sqlite.html#Syntax","title":"Syntax","text":"<p>A SQLite statement ends with <code>;</code>.</p>"},{"location":"dev/db/sqlite.html#Database","title":"Database","text":"<pre><code>sqlite3 test.db # create a new db or connect to a database which points to a file named test.db\nsqlite3 test.db .dump &gt; test.sql # backup\nsqlite3 test.db &lt; test.sql # recover\n</code></pre> <p>When connecting to a database which is generally named after main, use ATTACH command to get connection of annother database. Names main and temp, reserved for main database and that for temporary tables and other data, are not recommended to attached as.</p> <pre><code>.databases \n-- output: 0 main /home/user_name/my.db\n\nATTACH DATABASE 'test.db' as test;\n.databases\n-- output: 0 main /home/user_name/my.db\n-- output: 2 test /home/user_name/test.db\n\nDETACH DATABASE test;\n</code></pre>"},{"location":"dev/db/sqlite.html#Tables","title":"Tables","text":""},{"location":"dev/db/mysql/index.html","title":"Index","text":""},{"location":"dev/db/mysql/index.html#Overview","title":"Overview","text":"<p>Learn MySQL. Here are the documentations and Chinese version .</p>"},{"location":"dev/db/mysql/index.html#Installation","title":"Installation","text":"<p>See more details here.</p>"},{"location":"dev/db/mysql/index.html#Linux","title":"Linux","text":"<p>Select and download the repository package from the Download Yum Repository page and then install the repository.</p> <pre><code>$ wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm\n\n$ yum install mysql80-community-release-el7-3.noarch.rpm\n</code></pre> <p>List all subrepositories of different series and their status. Enable the specific series instead of default one.</p> <pre><code>$ yum repolist all | grep mysql\n\n$ yum-config-manager --disable mysql80-community\n$ yum-config-manager --enable mysql57-community\n</code></pre> <p>If <code>yum-config-manager</code> is not found, install the command from yum-utils with <code>yum install yum-utils</code>. Or edit manually the /etc/yum.repos.d/mysql-community.repo file to change the release series. Just find the entry of the subrepository and then modify the value of property enabled.</p> <p>Now, install MySQL and then start the MySQL server.</p> <pre><code>$ yum install mysql-community-server\n\n$ /bin/systemctl start mysqld\n</code></pre> <p>At the initial start up of the server,</p> <ul> <li>The server is initialized.</li> <li>SSL certificate and key files are generated in the data directory.</li> <li>Plugin validate_password is installed and enabled by default which requires that passwords contain at least one uppercase letter, one lowercase letter, one digit, and one special character, and that the total password length is at least 8 characters.</li> <li>A superuser account 'root'@'localhost is created. A password for the superuser is set and stored in the error log file. Reveal it with <code>grep 'temporary password' /var/log/mysqld.log</code>.</li> </ul> <p>Change the root password as soon as possible.</p> <pre><code>$ mysql -u root -p # login\nmysql&gt; alter user 'root'@'localhost' identified by '&lt;new password&gt;'; # change the password\n</code></pre>"},{"location":"dev/db/mysql/index.html#Verification","title":"Verification","text":"<p>Check the version information of installed MySQL server and global variables. Append <code>-uroot -p</code> to connect as root if necessary.</p> <pre><code>$ mysqladmin version\n$ mysqladmin variables\n</code></pre>"},{"location":"dev/db/mysql/index.html#Remote-Connection","title":"Remote Connection","text":"<p>SSH is recommended. To connect not through SSH, update the table mysql.user to add hosts to a specific user. Open the port of firewall if needed.</p> <pre><code>grant &lt;priv1\uff0cpriv2...&gt; on &lt;database&gt;.&lt;table&gt; to &lt;user&gt;@'&lt;host/ip&gt;' identified by '&lt;password&gt;';\n\neg:\ngrant all privileges on *.* to '&lt;user&gt;'@'&lt;host&gt;' identified by '&lt;password&gt;';\n\nflush privileges; -- flush tables related to privileges\n</code></pre>"},{"location":"dev/db/mysql/index.html#Configuration","title":"Configuration","text":"<p>Edit the configuration file /etc/my.cnf or /etc/mysql/my.cnf.</p>"},{"location":"dev/db/mysql/faq.html","title":"FAQ","text":""},{"location":"dev/db/mysql/faq.html#NonTransientConnectionException","title":"NonTransientConnectionException","text":"<p>E: NonTransientConnectionException: Public Key Retrieval is not allowed</p> <p>S: Add allowPublicKeyRetrieval=true after the connection URL. Refer to MySQL Connection String for C# .NET Core Programs - MySqlConnector.</p>"},{"location":"dev/db/mysql/faq.html#Forget-Password","title":"Forget Password","text":"<p>On Linux, append <code>skip-grant-tables</code> to configuration file /etc/my.cnf to enable logging in without verification. Then log in the database and execute an update sql: <code>update user set authentication_string = password('&lt;new password&gt;') where user = 'root'</code>. Recover the file and restart MySQL.</p> <p>On Windows, the configuration file is usuallt located to my.ini under ProgramData.</p>"},{"location":"dev/db/oracle/index.html","title":"Index","text":""},{"location":"dev/db/oracle/index.html#Overview","title":"Overview","text":"<p>Learn knowledge of Oracle.</p>"},{"location":"dev/db/oracle/index.html#Installation","title":"Installation","text":""},{"location":"dev/db/oracle/index.html#References","title":"References","text":"<ol> <li>Oracle-\u77e5\u8bc6\u7ed3\u6784\u6f2b\u8c08 - \u5c0f\u5de5\u5320 - CSDN\u535a\u5ba2</li> </ol>"},{"location":"dev/db/oracle/sql.html","title":"SQL","text":""},{"location":"dev/db/oracle/sql.html#Overview","title":"Overview","text":"<p>Oracle SQL statements are divided into the following categories:</p> <ul> <li>Data Definition Language (DDL) Statements</li> <li>Data Manipulation Language (DML) Statements</li> <li>Transaction Control Statements</li> <li>Session Control Statements</li> <li>System Control Statement</li> <li>Embedded SQL Statements</li> </ul>"},{"location":"dev/lang/c.html","title":"C Language","text":""},{"location":"dev/lang/c.html#Overview","title":"Overview","text":"<p>Learn C Language.</p>"},{"location":"dev/lang/c.html#Config","title":"Config","text":"<p>The commonest compiler is GNU Compiler Collection, short for GCC. Install GCC as instructed here. Generally, GCC and G++ are both available on Linux.</p>"},{"location":"dev/lang/php.html","title":"PHP","text":""},{"location":"dev/lang/php.html#Overview","title":"Overview","text":"<p>Learn PHP.</p>"},{"location":"dev/lang/php.html#References","title":"References","text":"<ol> <li>PHP: Documentation</li> <li>PHP: PHP \u624b\u518c - Manual</li> </ol>"},{"location":"dev/web/css/bootstrap.html","title":"Bootstrap","text":""},{"location":"dev/web/css/bootstrap.html#Overview","title":"Overview","text":"<p>Bootstrap is an open source toolkit for developing with HTML, CSS, and JS. Refer to its documentation or Chinese one.</p>"},{"location":"dev/web/js/index.html","title":"Index","text":""},{"location":"dev/web/js/index.html#Overview","title":"Overview","text":"<p>JavaScript is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.</p>"},{"location":"dev/web/js/jquery.html","title":"jQuery","text":""},{"location":"dev/web/js/jquery.html#Overview","title":"Overview","text":"<p>[jQuery] is a JavaScript library. See official apis or Chinese version.</p>"},{"location":"dev/web/js/jquery.html#Utilities","title":"Utilities","text":""},{"location":"dev/web/js/jquery.html#extend","title":"extend","text":"<p>Merge the contents of two or more objects together into the first object.</p> <pre><code>var object = $.extend(object1, object2); // merge object2 into object1, the object1 will be modified.\nvar object = $.extend({}, object1, object2); // if u don't want target to be modified.\nvar object = $.extend(true, object1, object1); // merge recursively, defaults to false.\n</code></pre>"},{"location":"dev/web/js/layui.html","title":"Layui","text":""},{"location":"dev/web/js/layui.html#Overview","title":"Overview","text":"<p>Layer is a Web popup component.</p>"},{"location":"dev/web/js/nodejs.html","title":"Node.js","text":""},{"location":"dev/web/js/nodejs.html#Installation","title":"Installation","text":"<p>Download and install from Download | Node.js.</p>"},{"location":"dev/web/js/nodejs.html#NPM","title":"NPM","text":""},{"location":"dev/web/js/nodejs.html#Commands","title":"Commands","text":"<pre><code>$ npm view {module_name} versions # view all version of specified module\n$ npm install {module_name}@{version} # install specified version of a module\n</code></pre>"},{"location":"dev/web/js/nodejs.html#Mirrors","title":"Mirrors","text":""},{"location":"dev/web/js/nodejs.html#Temparory","title":"Temparory","text":"<pre><code>$ npm --registry https://registry.npm.taobao.org install {module_name}\n</code></pre>"},{"location":"dev/web/js/nodejs.html#Permanent","title":"Permanent","text":"<pre><code>$ npm config set registry https://registry.npm.taobao.org\n\n# verify\n$ npm config get registry\n</code></pre>"},{"location":"dev/web/js/nodejs.html#References","title":"References","text":"<ol> <li>Node.js v12.16.1 Documentation</li> <li>API \u6587\u6863 | Node.js \u4e2d\u6587\u7f51</li> <li>Node.js \u6559\u7a0b | \u83dc\u9e1f\u6559\u7a0b</li> <li>npm\u955c\u50cf\u53ca\u914d\u7f6e\u65b9\u6cd5 - \u653e\u9010\u3001\u9752\u6625 - \u535a\u5ba2\u56ed</li> </ol>"},{"location":"dev/web/js/react.html","title":"React","text":""},{"location":"dev/web/js/react.html#References","title":"References","text":"<ol> <li>IDEA\u5f00\u53d1React\u73af\u5883\u914d\u7f6e - \u9a91\u9e64\u4e0b\u6c5f\u5357 - \u535a\u5ba2\u56ed</li> <li>React -- \u7b80\u6613\u9879\u76ee\u5b9e\u6218 - \u4e0d\u4f1a\u4ee3\u7801\u7684\u524d\u7aef - \u535a\u5ba2\u56ed</li> </ol>"},{"location":"dev/web/js/select2.html","title":"Select2","text":""},{"location":"dev/web/js/select2.html#Overview","title":"Overview","text":"<p>Select2 provides a customizable select box.</p>"},{"location":"java/maven.html","title":"Maven","text":""},{"location":"java/maven.html#Overview","title":"Overview","text":"<p>Apache Maven is a software project management and comprehension tool.</p>"},{"location":"java/maven.html#Configuration","title":"Configuration","text":"<p>Download Maven and add to PATH.</p> <p>Create a copy of conf/settings.xml to add an internal mirror and modify the path of local repository. Following is a mirror of aliyun.</p> <pre><code>&lt;mirror&gt;\n    &lt;id&gt;nexus-aliyun&lt;/id&gt;\n    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;\n    &lt;name&gt;Nexus aliyun&lt;/name&gt;\n    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;\n&lt;/mirror&gt;\n</code></pre>"},{"location":"java/maven.html#Nexus","title":"Nexus","text":"<p>Build a private Maven server with Nexus.</p>"},{"location":"java/maven.html#References","title":"References","text":"<ul> <li>Maven \u2013 Maven Documentation</li> <li>GitHub - apache/maven-sources: Apache Maven Sources</li> </ul>"},{"location":"java/mybatis.html","title":"MyBatis","text":"<p>Learn MyBatis and its integration with Spring.</p>"},{"location":"java/mybatis.html#Get-Started","title":"Get Started","text":""},{"location":"java/mybatis.html#Installation","title":"Installation","text":"<p>Download mybatis-x.x.x.jar or add Maven dependency: <code>org.mybatis: mybatis: x.x.x</code>.</p>"},{"location":"java/mybatis.html#Example","title":"Example","text":"<ol> <li>Configure arguments in an XML configuration file, specially mappers to include SQL Mapper XML files.</li> <li>Load the configuration to build a <code>SqlSessionFactory</code> instance.</li> <li>Create SqlSession instances by <code>SqlSessionFactory</code> to execute mapped SQLs.</li> </ol>"},{"location":"java/mybatis.html#Configuration","title":"Configuration","text":""},{"location":"java/mybatis.html#Mapper-XML-Files","title":"Mapper XML Files","text":"<pre><code>&lt;!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;\n&lt;mapper namespace=\"${namespace}\"&gt;\n&lt;/mapper&gt;\n</code></pre> <p>Namespace isolates statements with longer, full-qualified names and binds XML files with corresponding interfaces.</p>"},{"location":"java/mybatis.html#Dynamic-SQL","title":"Dynamic SQL","text":"<p>MyBatis employs powerful OGNL based expressions.</p>"},{"location":"java/mybatis.html#SqlSessions","title":"SqlSessions","text":"<p><code>SqlSession</code> is the primary interface to work with MyBatis. This interface is used to execute commands, get mappers and manage transactions. Refer to the latest documents.</p>"},{"location":"java/mybatis.html#SqlSessionFactory","title":"SqlSessionFactory","text":"<p><code>SqlSession</code> instances are created by <code>SqlSessionFactory</code> whose instances can be built by <code>SqlSessionFactoryBuilder</code> based on an XML configuration file or a custom prepared instance of <code>Configuration</code>.</p>"},{"location":"java/mybatis.html#From-XML","title":"From XML","text":"<p>Use a utility class called <code>Resources</code> in MyBatis to load the configuration file from resources directory under classpath. See Configuration to configure an XML configuration file.</p> <pre><code>SqlSessionFactory buildFactoryFromXML() {\n    String resource = \"mybatis-config.xml\";\n    InputStream inputStream = null;\n    try {\n        inputStream = Resources.getResourceAsStream(resource);\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n    return new SqlSessionFactoryBuilder().build(inputStream);\n}\n</code></pre>"},{"location":"java/mybatis.html#Without-XML","title":"Without XML","text":"<p>Use utility classes from <code>org.apache.ibatis.session</code>.</p> <pre><code>SqlSessionFactory buildFactoryWithoutXML() {\n    DataSource dataSource = new PooledDataSource(\"driver\", \"url\", \"username\", \"password\");\n    TransactionFactory transactionFactory = new JdbcTransactionFactory();\n    Environment environment = new Environment(\"development\", transactionFactory, dataSource);\n    Configuration configuration = new Configuration(environment);\n    return new SqlSessionFactoryBuilder().build(configuration);\n}\n</code></pre>"},{"location":"java/mybatis.html#SqlSession","title":"SqlSession","text":"<p>Now, get instances of <code>SqlSession</code> by the method <code>SqlSessionFactory.openSession()</code>.</p>"},{"location":"java/mybatis.html#FAQ","title":"FAQ","text":""},{"location":"java/mybatis.html#Batch","title":"Batch","text":""},{"location":"java/mybatis.html#Loop","title":"Loop","text":"<pre><code>int batchInsert(List&lt;User&gt; users) {\n    SqlSession sqlSession = MyConfiguration.getSqlSessionFactory().openSession(false);\n    UserMapper mapper = sqlSession.getMapper(UserMapper.class);\n    int count = 0;\n    for (User user : users) {\n        count += mapper.insertUser(user);\n    }\n    sqlSession.commit();\n    sqlSession.close();\n    return count;\n}\n</code></pre>"},{"location":"java/mybatis.html#Batch-Mode","title":"Batch Mode","text":"<pre><code>int batchInsert(List&lt;User&gt; users) {\n    SqlSession sqlSession = MyConfiguration.getSqlSessionFactory().openSession(ExecutorType.BATCH, false); // only difference to above way\n    UserMapper mapper = sqlSession.getMapper(UserMapper.class);\n    int count = 0;\n    for (User user : users) {\n        count += mapper.insertUser(user);\n    }\n    sqlSession.commit();\n    sqlSession.close();\n    return count;\n}\n</code></pre>"},{"location":"java/mybatis.html#Type-Cast","title":"Type Cast","text":""},{"location":"java/mybatis.html#Foreach-in-Mapper","title":"Foreach in Mapper","text":"<pre><code>int batchInsert(List&lt;User&gt; users) {\n    if (users != null &amp;&amp; users.size() &gt; 0) {\n        SqlSession sqlSession = MyConfiguration.getSqlSessionFactory().openSession();\n        UserMapper mapper = sqlSession.getMapper(UserMapper.class);\n        int count = mapper.batchInsert(users);\n        sqlSession.commit();\n        sqlSession.close();\n        return count;\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>&lt;insert id=\"batchInsert\"&gt;\n    INSERT INTO example.user (username, age)\n    VALUES\n    &lt;foreach collection=\"list\" item=\"item\" separator=\",\"&gt;\n        (#{item.username}, #{item.age})\n    &lt;/foreach&gt;\n&lt;/insert&gt;\n</code></pre> <p>Notes: Maximum SQL size that MySQL can accept is configured in my.ini as max_allowed_packet, defaults to 1M.</p>"},{"location":"java/mybatis.html#Tips","title":"Tips","text":"<p>The number of items in the condition <code>IN ()</code> shouldn't exceed 1000. Otherwise, split them with <code>OR</code> as follows:</p> <pre><code>&lt;select id=\"select\"&gt;\n SELECT * FROM example.user\n &lt;where&gt;\n  username IN\n  &lt;foreach collection=\"list\" item=\"item\" open=\"(\" close=\")\" separator=\",\"&gt;\n   &lt;if test=\"(index % 999) == 998\"&gt; NULL ) OR username IN (&lt;/if&gt;#{item}\n  &lt;/foreach&gt;\n &lt;/where&gt;\n&lt;/select&gt;\n</code></pre>"},{"location":"java/mybatis.html#Generator","title":"Generator","text":"<p>MyBatis Generator is a code generator for MyBatis.</p>"},{"location":"java/mybatis.html#References","title":"References","text":"<ul> <li>mybatis \u2013 MyBatis 3</li> <li>GitHub - mybatis/mybatis-3: MyBatis SQL mapper framework for Java</li> <li>mybatis-spring \u2013 MyBatis-Spring</li> <li>GitHub - mybatis/spring: Spring integration for MyBatis 3</li> <li>mybatis-spring-boot \u2013 About</li> </ul>"},{"location":"java/ognl.html","title":"OGNL","text":""},{"location":"java/ognl.html#Overview","title":"Overview","text":"<p>OGNL is short for Object-Graph Navigation Language.</p>"},{"location":"java/tomcat.html","title":"Tomcat","text":""},{"location":"java/tomcat.html#Overview","title":"Overview","text":"<p>Apache Tomcat is an open source implementation of the Java Servlet, JavaServer Pages, Java Expression Language and Java WebSocket technologies.</p>"},{"location":"java/tomcat.html#Configuration","title":"Configuration","text":"<p>Run bin/service.bat to add Tomcat to Windows service.</p>"},{"location":"java/tomcat.html#Publish-Static-Pages","title":"Publish Static Pages","text":"<p>Create a xml file under conf/Catalina/localhost with:</p> <pre><code>&lt;!--'path' is optional--&gt;\n&lt;!--'dir_to_deploy' is directory to deploy--&gt;\n&lt;Context path=\"{path}\" docBase=\"{dir_to_deploy}\" debug=\"0\" reloadable=\"true\" crossContext=\"true\"/&gt;\n</code></pre> <p>Access the website from http://127.0.0.1:8080/index.html.</p>"},{"location":"java/tomcat.html#FAQ","title":"FAQ","text":""},{"location":"java/tomcat.html#Accessed-from-LAN","title":"Accessed from LAN","text":"<p>Just access the server from the address. If failed, open advanced settings of firewall and then add a Inbound Rule for the port of Tomcat, 8080 as usual.</p>"},{"location":"java/tomcat.html#References","title":"References","text":"<ul> <li>Apache Tomcat\u00ae - Welcome!</li> </ul>"},{"location":"java/basic/annotation.html","title":"Annotation","text":""},{"location":"java/basic/annotation.html#Meta-annotations","title":"Meta annotations","text":"<p>Annotations applied to other annotations</p>"},{"location":"java/basic/annotation.html#Target","title":"@Target","text":"<p>Marks another annotation to restrict what kind of Java elements the annotation may be applied to. Values of <code>ElementType</code> includes:</p> <ul> <li>TYPE: class, interface or enum</li> <li>FIELD: fields, including the constants in the enum</li> <li>METHOD</li> <li>PARAMETER</li> <li>CONSTRUCTOR</li> <li>LOCAL_VARIABLE</li> <li>ANNOTATION_TYPE</li> <li>PACKAGE</li> </ul>"},{"location":"java/basic/annotation.html#Retention","title":"@Retention","text":"<p>Specifies how the marked annotation is stored. Values of <code>RetentionPolicy</code> includes:</p> <ul> <li>SOURCE: in code only, abandoned once compiled.</li> <li>CLASS(default): compiled into the class, abandoned when running</li> <li>RUNTIME: available at runtime through reflection</li> </ul>"},{"location":"java/basic/annotation.html#Documented","title":"@Documented","text":"<p>Marks another annotation for inclusion in the documentation.</p>"},{"location":"java/basic/annotation.html#Inherited","title":"@Inherited","text":"<p>Marks another annotation to be inherited to subclasses of annotated class. Annotations are not inherited to subclasses by default.</p>"},{"location":"java/basic/annotation.html#Example","title":"Example","text":"<pre><code>@Target(ElementType.FIELD)\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface Test{\n\n}\n</code></pre>"},{"location":"java/basic/annotation.html#References","title":"References","text":"<ul> <li>java.lang.annotation (Java SE 11 &amp; JDK 11 )</li> </ul>"},{"location":"java/lib/apache-poi.html","title":"Apache POI","text":""},{"location":"java/lib/apache-poi.html#Usage","title":"Usage","text":""},{"location":"java/lib/apache-poi.html#Reading","title":"Reading","text":"<pre><code>int cellType = cell.getCellType() == Cell.CELL_TYPE_FORMULA ? cell.getCachedFormulaResultType() : cell.getCellType();\nString cellValue = \"\";\nswitch (cellType) {\n    case Cell.CELL_TYPE_NUMERIC:\n        if (DateUtil.isCellDateFormatted(cell)) {\n            cellValue = String.valueOf(cell.getDateCellValue());\n        } else {\n            cell.setCellType(Cell.CELL_TYPE_STRING);\n            cellValue = cell.getStringCellValue();\n        }\n        break;\n\n    case Cell.CELL_TYPE_STRING:\n        cellValue = legalizeString((cell.getStringCellValue()));\n        break;\n\n    case Cell.CELL_TYPE_BOOLEAN:\n        cellValue = String.valueOf(cell.getBooleanCellValue());\n        break;\n\n    default:\n        break;\n}\n</code></pre>"},{"location":"java/lib/apache-poi.html#References","title":"References","text":"<ul> <li>Apache POI - the Java API for Microsoft Documents</li> </ul>"},{"location":"java/lib/http-components.html","title":"HttpComponents","text":""},{"location":"java/lib/http-components.html#Overview","title":"Overview","text":"<p>The Apache HttpComponents project is responsible for creating and maintaining a toolset of low level Java components focused on HTTP and associated protocols.</p>"},{"location":"java/lib/http-components.html#References","title":"References","text":"<ul> <li>Apache HttpComponents</li> </ul>"},{"location":"java/lib/lombok.html","title":"Lombok","text":""},{"location":"java/lib/lombok.html#Overview","title":"Overview","text":"<p>Project Lombok is a java library that automatically plugs into editors and build tools, spicing up Java.</p>"},{"location":"java/lib/lombok.html#Maven","title":"Maven","text":"<p>After importing Lombok as following in Maven project, it will takes effect when compiling.</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n    &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n    &lt;version&gt;${lombok.version}&lt;/version&gt;\n    &lt;scope&gt;provided&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"java/lib/lombok.html#Support-for-IDE","title":"Support for IDE","text":"<p>Install plug-in Lombok.</p>"},{"location":"java/lib/lombok.html#Principle","title":"Principle","text":"<p>Since Java 6, Java supports regulation of JSR 269 Pluggable Annotation Processing API which is called when javac is running. Its procedures are as follows:</p> <ol> <li>javac analyzes the source code and generates an Abstract Syntax Tree (AST).</li> <li>javac calls Lombok programs implementing JSR 269 API when compiling.</li> <li>Lombok deals with the AST above modifies its nodes by associate annotations.</li> <li>javac generates bytecode files based on the modified AST.</li> </ol>"},{"location":"java/lib/lombok.html#Usage","title":"Usage","text":"<ul> <li><code>@NonNull</code></li> <li><code>@Cleanup</code> calls <code>close()</code> methods, taking effect for objects implementing <code>java.io.Closeable</code> method.</li> <li><code>@Getter</code>, <code>@Setter</code></li> <li><code>@ToString</code></li> <li><code>@EqualsAndHashCode</code> generates <code>equals()</code> and <code>hashCode()</code></li> <li><code>@NoArgsConstructor</code>, <code>@RequiredArgsConstructor</code> and <code>@AllArgsConstructor</code> generate constructors that take no fields, <code>final</code> / <code>@NonNull</code> fields or all fields.</li> <li><code>@Data</code> is a shortcut for <code>@ToString</code>, <code>@EqualsAndHashCode</code>, <code>@Getter</code> on all fields, <code>@Setter</code> on all non-final fields and <code>@RequiredArgsConstrutor</code>.</li> <li><code>@Value</code></li> <li><code>@Builder</code> builds types by Builder Pattern.</li> <li><code>@SneakyThrows</code> checks exceptions.</li> <li><code>@With</code></li> <li><code>@Log</code> generates a logger field.</li> </ul>"},{"location":"java/lib/lombok.html#References","title":"References","text":"<ul> <li>Overview (Lombok)</li> <li>Lombok Features</li> </ul>"},{"location":"java/spring/index.html","title":"Spring","text":"<ul> <li>Spring Framework<ul> <li>Core Technologies<ul> <li>AOP</li> </ul> </li> <li>Data Access<ul> <li>Transaction</li> </ul> </li> </ul> </li> <li>Spring Boot<ul> <li>Actuator</li> </ul> </li> <li>Spring Data<ul> <li>Spring Data JDBC</li> <li>Spring Data JPA</li> <li>Spring Data LDAP</li> <li>Spring Data MongoDB</li> <li>Spring Data Redis</li> <li>Spring Data REST</li> <li>Spring Data Elasticsearch</li> </ul> </li> <li>Spring Security</li> <li>Spring Batch</li> <li>Spring LDAP</li> </ul>"},{"location":"java/spring/aop.html","title":"AOP","text":""},{"location":"java/spring/aop.html#Introduction","title":"Introduction","text":"<p>Aspect-oriented programming (AOP) is a programming paradigm that aims to increase modularity by allowing the separation of cross-cutting concerns. Cross-cutting concerns are those aspects of a program that affect other concerns, such as logging, security, transaction management, etc. AOP allows us to encapsulate these concerns in separate modules and apply them declaratively to the points where they are needed, without modifying the core logic of the program.</p>"},{"location":"java/spring/aop.html#Core-Concepts","title":"Core Concepts","text":"<p>The core concepts of AOP are:</p> <ol> <li>Aspect: An aspect is a module that encapsulates a cross-cutting concern. It can contain advice, pointcuts, and introductions.</li> <li>Join point: A join point is a point in the execution of a program, such as method invocation, exception throwing, field access, etc. An aspect can be applied at one or more join points.</li> <li>Pointcut: A pointcut is an expression that defines a set of join points. It specifies where an aspect should be applied.</li> <li>Advice: Advice is the action taken by an aspect at a join point. It can be executed before, after, or around the join point.</li> </ol>"},{"location":"java/spring/aop.html#Spring-AOP","title":"Spring AOP","text":"<p>Spring AOP is a framework that supports aspect-oriented programming in Spring applications. It allows us to define aspects using either XML configuration or annotation-based configuration.</p>"},{"location":"java/spring/aop.html#XML-configuration","title":"XML configuration","text":"<p>To use XML configuration, we need to enable AOP support in the Spring context file by adding the <code>&lt;aop:aspectj-autoproxy/&gt;</code> element. Then we can define aspects using the <code>&lt;aop:config&gt;</code> element and its sub-elements. For example:</p> <pre><code>&lt;aop:config&gt;\n    &lt;!-- Define an aspect --&gt;\n    &lt;aop:aspect id=\"loggingAspect\" ref=\"loggingBean\"&gt;\n        &lt;!-- Define a pointcut --&gt;\n        &lt;aop:pointcut id=\"allMethods\" expression=\"execution(* com.example.service.*.*(..))\"/&gt;\n        &lt;!-- Define an advice --&gt;\n        &lt;aop:before pointcut-ref=\"allMethods\" method=\"logBefore\"/&gt;\n    &lt;/aop:aspect&gt;\n&lt;/aop:config&gt;\n</code></pre> <p>This example defines an aspect named <code>loggingAspect</code> that references a bean named <code>loggingBean</code>. The aspect has a pointcut named <code>allMethods</code> that matches all methods in the <code>com.example.service</code> package. The aspect also has a before advice that invokes the <code>logBefore</code> method of the <code>loggingBean</code> before each matched join point.</p>"},{"location":"java/spring/aop.html#Annotation-based-configuration","title":"Annotation-based configuration","text":"<p>To use annotation-based configuration, we need to enable AOP support by adding the <code>@EnableAspectJAutoProxy</code> annotation to a configuration class. Then we can define aspects using the <code>@Aspect</code> annotation and other annotations for pointcuts and advices. For example:</p> <pre><code>@Configuration\n@EnableAspectJAutoProxy\npublic class AppConfig {\n    // ...\n}\n\n@Aspect\n@Component\npublic class LoggingAspect {\n\n    // Define a pointcut using @Pointcut annotation\n    @Pointcut(\"execution(* com.example.service.*.*(..))\")\n    public void allMethods() {}\n\n    // Define an advice using @Before annotation\n    @Before(\"allMethods()\")\n    public void logBefore(JoinPoint joinPoint) {\n        // ...\n    }\n}\n</code></pre> <p>This example defines an aspect named <code>LoggingAspect</code> that is also a Spring component. The aspect has a pointcut named <code>allMethods</code> that matches all methods in the <code>com.example.service</code> package. The aspect also has a before advice that invokes the <code>logBefore</code> method before each matched join point.</p>"},{"location":"java/spring/aop.html#Pointcut-expressions","title":"Pointcut expressions","text":"<p>Pointcut expressions are used to specify which join points should be matched by an aspect. Spring AOP uses AspectJ\u2019s pointcut expression language, which supports various kinds of designators to match different kinds of join points. Some of the common designators are:</p> <ul> <li><code>execution</code>: Matches method execution join points. It takes a pattern that specifies the method signature, such as modifiers, return type, class name, method name, and parameters. For example, <code>execution(public * com.example.service.*.*(..))</code> matches any public method in any class in the <code>com.example.service</code> package.</li> <li><code>within</code>: Matches join points within certain types. It takes a pattern that specifies the type name, such as package name, class name, or interface name. For example, <code>within(com.example.service.*)</code> matches any join point within any class in the <code>com.example.service</code> package.</li> <li><code>args</code>: Matches join points where the arguments are instances of given types. It takes a list of type names or patterns. For example, <code>args(String, int)</code> matches any join point where the first argument is a <code>String</code> and the second argument is an <code>int</code>.</li> <li><code>@annotation</code>: Matches join points where the subject has a given annotation. It takes the annotation type name. For example, <code>@annotation(com.example.annotation.Loggable)</code> matches any join point where the method or the class has the <code>@Loggable</code> annotation.</li> </ul>"},{"location":"java/spring/aop.html#Advice-annotations","title":"Advice annotations","text":"<p>Advice annotations are used to specify what kind of advice should be applied at a join point. Spring AOP supports five types of advice annotations:</p>"},{"location":"java/spring/aop.html#Before","title":"@Before","text":"<p>Indicates that the advice should be executed before the join point. It takes a pointcut expression or a reference to a pointcut method as a value.</p> <p>For example, <code>@Before(\"allMethods()\")</code> indicates that the advice should be executed before any join point matched by the <code>allMethods</code> pointcut.</p>"},{"location":"java/spring/aop.html#After","title":"@After","text":"<p>Indicates that the advice should be executed after the join point, regardless of whether it completes normally or throws an exception. It takes a pointcut expression or a reference to a pointcut method as a value.</p> <p>For example, <code>@After(\"allMethods()\")</code> indicates that the advice should be executed after any join point matched by the <code>allMethods</code> pointcut.</p>"},{"location":"java/spring/aop.html#AfterReturning","title":"@AfterReturning","text":"<p>Indicates that the advice should be executed after the join point returns normally. It takes a pointcut expression or a reference to a pointcut method as a value. It also has an optional attribute named <code>returning</code> that specifies the name of a parameter in the advice method that will receive the return value of the join point.</p> <p>For example, <code>@AfterReturning(value = \"allMethods()\", returning = \"result\")</code> indicates that the advice should be executed after any join point matched by the <code>allMethods</code> pointcut, and the return value of the join point should be passed to a parameter named <code>result</code> in the advice method.</p>"},{"location":"java/spring/aop.html#AfterThrowing","title":"@AfterThrowing","text":"<p>Indicates that the advice should be executed after the join point throws an exception. It takes a pointcut expression or a reference to a pointcut method as a value. It also has an optional attribute named <code>throwing</code> that specifies the name of a parameter in the advice method that will receive the exception thrown by the join point.</p> <p>For example, <code>@AfterThrowing(value = \"allMethods()\", throwing = \"ex\")</code> indicates that the advice should be executed after any join point matched by the <code>allMethods</code> pointcut, and the exception thrown by the join point should be passed to a parameter named <code>ex</code> in the advice method.</p>"},{"location":"java/spring/aop.html#Around","title":"@Around","text":"<p>Indicates that the advice should be executed around the join point, meaning that it can control whether and when to proceed to the join point or return from it. It takes a pointcut expression or a reference to a pointcut method as a value. It also requires that the advice method has a parameter of type <code>ProceedingJoinPoint</code>, which is a special kind of <code>JoinPoint</code> that allows us to invoke the join point explicitly.</p> <p>For example, <code>@Around(\"allMethods()\")</code> indicates that the advice should be executed around any join point matched by the allMethods pointcut, and the advice method should have a parameter of type ProceedingJoinPoint.</p>"},{"location":"java/spring/aop.html#Best-Practices","title":"Best Practices","text":"<p>AOP is a powerful and useful technique for software development, but it also requires some care and discipline to use it effectively and efficiently. Here are some tips and best practices for using AOP:</p> <ul> <li>Choose appropriate join points and pointcuts: Use the most specific and expressive pointcut expressions that match your requirements. Avoid using too broad or too narrow pointcuts that may cause unwanted side effects or miss some join points. Use named pointcuts or pointcut methods to improve readability and reusability.</li> <li>Avoid overuse or misuse of aspects: Use aspects only for cross-cutting concerns that cannot be easily implemented by other means. Avoid using aspects for core concerns that belong to the main logic of the program. Avoid using aspects for trivial or cosmetic concerns that do not add much value to the program.</li> <li>Follow naming conventions and coding standards: Use consistent and meaningful names for your aspects, pointcuts, and advices. Follow the coding standards and conventions of your project or organization. Use proper indentation, spacing, comments, etc., to improve readability and maintainability.</li> <li>Test and debug your aspects: Test your aspects thoroughly and independently from the core concerns. Use unit testing, integration testing, or end-to-end testing tools and frameworks to verify the correctness and functionality of your aspects. Debug your aspects carefully and systematically, using logging, tracing, breakpoints, etc., to identify and fix errors or bugs.</li> </ul>"},{"location":"java/spring/aop.html#References","title":"References","text":"<ul> <li>The AspectJ Programming Guide</li> <li>AOP with Spring - Spring Framework</li> </ul>"},{"location":"java/spring/transaction.html","title":"Transaction","text":"<p>A transaction is a logical unit of work that consists of one or more operations on a database, such as reading, writing, updating, or deleting data. Transactions are important for ensuring the consistency and integrity of the data in a database, especially when multiple users or applications access the data concurrently.</p> <p>A transaction has four main properties, known as ACID:</p> <ul> <li>Atomicity: A transaction is either completed in its entirety or not at all. If any part of the transaction fails, the entire transaction is aborted and any changes made by the transaction are rolled back.</li> <li>Consistency: A transaction transforms the database from one consistent state to another consistent state. A consistent state is one that satisfies all the integrity constraints and business rules defined for the database.</li> <li>Isolation: A transaction is isolated from other concurrent transactions, meaning that its intermediate results and effects are not visible to others until the transaction is committed. This prevents interference and anomalies among concurrent transactions.</li> <li>Durability: Once a transaction is committed, its effects are permanent and will not be lost even in the event of a system failure or power outage.</li> </ul> <p>Without transactions, the data in the database may become inconsistent, inaccurate, or corrupted due to failures or concurrency issues. Therefore, transactions are essential for maintaining the reliability and correctness of the data in a database.</p> <p>However, transactions are not without challenges or trade-offs. Transactions may affect the performance, scalability, or availability of the database system, depending on how they are implemented and managed. For example,</p> <ul> <li>Transactions may incur some overhead for creating, committing, rolling back, or coordinating transactions, such as logging, locking, or messaging.</li> <li>Transactions may reduce the concurrency or throughput of the database system, as they may block or delay other operations that access the same data or resources.</li> <li>Transactions may increase the complexity or difficulty of the database system, as they may introduce new problems or challenges, such as deadlocks, livelocks, starvation, or distributed consensus.</li> </ul> <p>Therefore, transactions require careful design and optimization to balance the trade-offs between data consistency and system performance.</p>"},{"location":"java/spring/transaction.html#Core-Concepts","title":"Core Concepts","text":"<p>There are some core concepts that are essential for understanding how transactions work and how to manage them effectively.</p>"},{"location":"java/spring/transaction.html#Transaction-Boundaries","title":"Transaction Boundaries","text":"<p>A transaction boundary defines the scope and duration of a transaction. It marks the beginning and the end of a transaction, as well as the points where the transaction can be committed or rolled back. Transaction boundaries can be explicit or implicit, depending on how they are defined and controlled by the application or the database system.</p> <p>The following table shows some examples of how transaction boundaries can be defined and controlled by different methods:</p>"},{"location":"java/spring/transaction.html#Explicit","title":"Explicit","text":"<p>The application explicitly starts and ends a transaction using SQL statements or commands. For example:</p> <pre><code>START TRANSACTION;\nUPDATE account SET balance = balance - 200 WHERE id = 1;\nUPDATE account SET balance = balance + 200 WHERE id = 2;\nCOMMIT;\n</code></pre>"},{"location":"java/spring/transaction.html#Implicit","title":"Implicit","text":"<p>The database system implicitly starts and ends a transaction for each SQL statement or command. For example:</p> <pre><code>UPDATE account SET balance = balance - 200 WHERE id = 1;\nUPDATE account SET balance = balance + 200 WHERE id = 2;\n</code></pre>"},{"location":"java/spring/transaction.html#Auto-commit","title":"Auto-commit","text":"<p>The database system automatically commits each SQL statement or command as a single transaction. For example:</p> <pre><code>SET AUTOCOMMIT = ON;\nUPDATE account SET balance = balance - 200 WHERE id = 1;\nUPDATE account SET balance = balance + 200 WHERE id = 2;\n</code></pre>"},{"location":"java/spring/transaction.html#Batch","title":"Batch","text":"<p>The application executes a batch of SQL statements or commands as a single transaction. For example:</p> <pre><code>BEGIN BATCH;\nUPDATE account SET balance = balance - 200 WHERE id = 1;\nUPDATE account SET balance = balance + 200 WHERE id = 2;\nAPPLY BATCH;\n</code></pre>"},{"location":"java/spring/transaction.html#Transaction-States","title":"Transaction States","text":"<p>A transaction state is the current status or condition of a transaction during its execution. A transaction can have one of the following states:</p> <ul> <li>Active: This is the initial state of a transaction when it starts. In this state, the transaction is executing its operations on the database. If all the operations are executed successfully, the transaction moves to the partially committed state. If any operation fails or encounters an error, the transaction moves to the failed state.</li> <li>Partially Committed: This is the state of a transaction when it has executed its final operation but not yet committed. In this state, the transaction has made some changes to the database but they are not permanent yet. If the commit operation succeeds, the transaction moves to the committed state. If the commit operation fails or encounters an error, the transaction moves to the failed state.</li> <li>Committed: This is the state of a transaction when it has completed successfully and made its changes permanent on the database. In this state, the transaction has achieved its goal and satisfied the ACID properties. The transaction moves to the terminated state after releasing all the resources it acquired during its execution.</li> <li>Failed: This is the state of a transaction when it has encountered an error or failure during its execution. In this state, the transaction has made some changes to the database but they are not consistent or valid. The transaction moves to the aborted state after undoing all the changes it made to restore the database to its previous consistent state.</li> <li>Aborted: This is the state of a transaction when it has been rolled back and discarded. In this state, the transaction has failed and cancelled its effects on the database. The transaction may move to the active state again if it is restarted or retried after resolving the cause of failure.</li> <li>Terminated: This is the final state of a transaction when it has ended its execution. In this state, the transaction has either committed or aborted and released all the resources it acquired during its execution. The transaction is no longer active and cannot be restarted or retried.</li> </ul>"},{"location":"java/spring/transaction.html#Transaction-Control","title":"Transaction Control","text":"<p>Transaction control refers to the mechanisms and commands that are used to manage transactions, such as starting, committing, rolling back, or terminating transactions. Transaction control can be performed by the application or by the database system, depending on the level of abstraction and automation required.</p>"},{"location":"java/spring/transaction.html#Transaction-Propagation","title":"Transaction Propagation","text":"<p>Transaction propagation refers to the way transactions are propagated or transferred across different components or resources that participate in a transaction. For example, if an application calls a method that starts a new transaction, then the transaction may be propagated to other methods that are invoked by the same application or by other applications. Transaction propagation can affect the performance and consistency of transactions, depending on how they are coordinated and synchronized.</p> <p>In Spring, the <code>propagation</code> attribute of <code>@Transactional</code> has seven possible values. Each value has a different meaning and implication for transaction management.</p> <ul> <li>REQUIRED means that if there is an existing transaction, then join it; otherwise create a new one. This is useful for typical read-write operations where atomicity is required.</li> <li>REQUIRES_NEW means that always start a new transaction, even if one already exists. Suspends the existing transaction until the new one is complete. This is useful when you want to ensure that a specific operation is always executed in a new transaction.</li> <li>SUPPORTS means that participate in a transaction if one already exists; doesn\u2019t start a new transaction if one doesn\u2019t exist. This is useful for read-only operations that can be part of a transaction but don\u2019t necessarily need to be.</li> <li>MANDATORY means that require that a transaction already exists; if a transaction doesn\u2019t exist, an exception is thrown. This is useful when you want to enforce that a method must be called within an existing transaction.</li> <li>NOT_SUPPORTED means that specify that a method should not participate in a transaction at all; suspends any existing transaction. This is useful for non-transactional operations within a transactional context.</li> <li>NEVER means that specify that a method should never be called within a transaction; if a transaction is active, an exception is thrown. This is useful when you want to enforce that a method must not be called within a transaction.</li> <li>NESTED means that start a nested transaction if one already exists; behaves like REQUIRED otherwise. This is useful when you want to have finer-grained control over the transaction boundaries and rollback points.</li> </ul>"},{"location":"java/spring/transaction.html#Transaction-Isolation","title":"Transaction Isolation","text":"<p>Transaction isolation refers to the degree of isolation or separation that is maintained among concurrent transactions. It determines how much data visibility and concurrency control are provided by the database system to prevent conflicts and anomalies among transactions. There are four standard levels of transaction isolation: read uncommitted, read committed, repeatable read, and serializable. Each level has different trade-offs between data consistency and concurrency performance.</p> <p>In Spring, the <code>isolation</code> attribute of <code>@Transactional</code> has five possible values. Each value corresponds to a standard level of transaction isolation defined by the SQL standard. Each level has a different meaning and implication for data consistency and concurrency performance.</p> <ul> <li>DEFAULT means that use the default isolation level of the underlying database. This is useful when you want to use the native behavior of the database system for transactions.</li> <li>READ_UNCOMMITTED means that allow a transaction to read data that has not yet been committed by other transactions, thereby allowing dirty reads. This is the lowest level of isolation and provides the highest concurrency but the lowest consistency.</li> <li>READ_COMMITTED means that guarantee that any data read by a transaction has been committed by other transactions at the moment it is read, thereby preventing dirty reads. This is a common level of isolation and provides a reasonable balance between concurrency and consistency.</li> <li>REPEATABLE_READ means that guarantee that any data read by a transaction will not be changed by other transactions until the transaction is complete, thereby preventing non-repeatable reads. This is a higher level of isolation and provides better consistency but lower concurrency.</li> <li>SERIALIZABLE means that guarantee that any data read or written by a transaction will be consistent with a serial execution of all transactions, thereby preventing dirty reads, non-repeatable reads, and phantom reads. This is the highest level of isolation and provides the best consistency but the worst concurrency.</li> </ul>"},{"location":"java/spring/transaction.html#Transactions-in-Databases","title":"Transactions in Databases","text":"<p>Different databases may have different ways of implementing and supporting transactions, depending on their architecture, features, and standards. However, some common aspects and principles apply to most databases. In this section, we will use MySQL and Oracle as examples to illustrate how transactions work in databases.</p>"},{"location":"java/spring/transaction.html#Transactions-in-MySQL","title":"Transactions in MySQL","text":"<p>MySQL supports transactions for tables that use storage engines that support transactions, such as InnoDB. By default, MySQL runs with autocommit mode enabled, which means that every SQL statement is treated as a single transaction and is automatically committed right after execution.</p> <p>To disable autocommit mode and start a new transaction explicitly, you can use the <code>START TRANSACTION</code> statement.</p> <p>Alternatively, you can use <code>BEGIN</code> or <code>BEGIN WORK</code> as aliases for <code>START TRANSACTION</code>.</p> <p>To commit the current transaction and make its changes permanent, you can use the <code>COMMIT</code> statement.</p> <p>To roll back the current transaction and cancel its changes, you can use the <code>ROLLBACK</code> statement.</p> <p>To set the transaction isolation level for the current session, you can use the <code>SET TRANSACTION ISOLATION LEVEL</code> statement.</p> <p>MySQL supports four levels of transaction isolation: read uncommitted, read committed, repeatable read (the default), and serializable.</p>"},{"location":"java/spring/transaction.html#Transactions-in-Oracle","title":"Transactions in Oracle","text":"<p>Oracle supports transactions for all tables regardless of their storage type. By default, Oracle runs with autocommit mode disabled, which means that every SQL statement is not automatically committed unless explicitly specified.</p> <p>To start a new transaction, you do not need to use any special statement, as Oracle implicitly starts a transaction when you execute the first SQL statement.</p> <p>To commit the current transaction and make its changes permanent, you can use the <code>COMMIT</code> statement:</p> <p>To roll back the current transaction and cancel its changes, you can use the <code>ROLLBACK</code> statement:</p> <p>To set the transaction isolation level for the current session, you can use the <code>SET TRANSACTION ISOLATION LEVEL</code> statement:</p> <p>Oracle supports two levels of transaction isolation: read committed (the default) and serializable.</p>"},{"location":"java/spring/transaction.html#Spring-Transaction","title":"Spring Transaction","text":"<p>Spring provides support for managing transactions in a declarative and consistent way. Spring transaction management is based on the abstraction of the <code>PlatformTransactionManager</code> interface, which defines the methods for creating, committing, rolling back, and suspending transactions.</p> <p>Spring provides various implementations of the <code>PlatformTransactionManager</code> interface for different types of resources, such as JDBC, JPA, Hibernate, JMS, and JTA. Spring also provides a unified annotation-based programming model for transaction management, which is based on the <code>@Transactional</code> annotation.</p> <p>The <code>@Transactional</code> annotation can be applied to classes or methods to indicate that they should be executed within a transaction. The annotation supports various attributes to configure the transaction behavior, such as propagation, isolation, timeout, read-only, and rollback rules.</p> <p>For example, to apply the <code>@Transactional</code> annotation to a service class that uses JPA as the persistence technology, we can write something like this:</p> <pre><code>@Service\n@Transactional\npublic class FooService {\n\n    @Autowired\n    private FooRepository fooRepository;\n\n    public void saveFoo(Foo foo) {\n        fooRepository.save(foo);\n    }\n\n    public Foo findFooById(Long id) {\n        return fooRepository.findById(id).orElse(null);\n    }\n\n}\n</code></pre> <p>In this example, we have annotated the <code>FooService</code> class with <code>@Transactional</code>, which means that all public methods of this class will be executed within a transaction. We have also injected a <code>FooRepository</code> bean, which is a Spring Data JPA interface that extends the <code>JpaRepository</code> interface. The <code>JpaRepository</code> interface provides methods for performing CRUD operations on entities using JPA.</p> <p>By default, Spring will use the <code>JpaTransactionManager</code> as the transaction manager for JPA transactions. The default transaction attributes are:</p> <ul> <li>Propagation: <code>REQUIRED</code>, which means that if there is an existing transaction, then join it; otherwise create a new one.</li> <li>Isolation: <code>DEFAULT</code>, which means that use the default isolation level of the underlying database.</li> <li>Timeout: <code>-1</code> (no timeout), which means that use the default timeout of the underlying transaction system.</li> <li>Read-only: <code>false</code>, which means that allow modifications to the data.</li> <li>Rollback: for runtime exceptions only, which means that only roll back the transaction if an unchecked exception is thrown.</li> </ul> <p>We can override these default attributes by specifying them in the <code>@Transactional</code> annotation. For example, to make a method read-only and roll back for any exception, we can write something like this:</p> <pre><code>@Transactional(readOnly = true, rollbackFor = Exception.class)\npublic Foo findFooById(Long id) {\n    return fooRepository.findById(id).orElse(null);\n}\n</code></pre> <p><code>@Transactional</code> does not work for the internal call because Spring uses proxies to implement transaction management.</p>"},{"location":"java/spring/transaction.html#FAQ","title":"FAQ","text":""},{"location":"java/spring/transaction.html#UnexpectedRollbackException","title":"UnexpectedRollbackException","text":"<p>The message of the exception is Transaction rolled back because it has been marked as rollback-only. One of the possible reason is that if the propagation of the nested transaction is set to default, the inner and outer transactions are actually one transaction. When the inner transaction throws an exception, Spring marks the current transaction as rollback-only. If the outer transaction catches the exception and doesn't throw it and commits the transaction normally, the exception will occur.</p> <p>There are several ways to solve the exception:</p> <ul> <li>If the application is expected to interrupt when the inner transaction throws an exception, don't catch the exception in the outer transaction and throw it directly.</li> <li>If the application is expected to execute normally, catch and handle the exception in the inner transaction.</li> <li>If the inner transaction is expected to rollback and have no effect on the outer one, set the propagation of the inner transaction to <code>NESTED</code> instead of <code>REQUIRED</code>.</li> </ul>"},{"location":"java/spring/transaction.html#References","title":"References","text":"<ul> <li>MySQL Transactional and Locking Statements</li> <li>Oracle Transaction Management</li> <li>Spring Transaction Management</li> <li>Transaction Propagation and Isolation in Spring @Transactional</li> </ul>"},{"location":"misc/activation.html","title":"Activation","text":""},{"location":"misc/activation.html#Navicat","title":"Navicat","text":"<p>Notes: It doesn't apply to Navicat 15 or higher versions.</p>"},{"location":"misc/activation.html#Preparation","title":"Preparation","text":"<p>Download and installation Navicat 12.1.26. Get keygen and patcher from OneDrive.</p>"},{"location":"misc/activation.html#Steps","title":"Steps","text":"<p>Replace the public key in the navicat.exe and libcc.dll with patcher.exe. For example, <code>navicat-patcher.exe \"D:\\Devs\\Navicat Premium 12\"</code>.</p> <pre><code>$ navicat-patcher.exe &lt;Navicat installation path&gt; [RSA-2048 PEM file]\n\n# &lt;Navicat installation path&gt; is the full installation path of Navicat.\n# [RSA-2048 PEM file] assigns the path of RSA-2048 PEM file, absolute or relative.\n# It's optional. Current directory will be chosen by default.\n</code></pre> <p>Generate serial number with keygen.exe. For example, <code>navicat-keygen.exe -text RegPrivateKey.pem</code>.</p> <pre><code>$ navicat-keygen.exe &lt;-bin|-text&gt; [-adv] &lt;RSA-2048 PrivateKey(PEM file)&gt;\n\n# &lt;-bin|-text&gt; must be one of the values: '-bin' or '-text'.\n# '-bin' for the old way\uff0cit will generate a license file.\n# '-text' for the new way, it will generate a Base64 code.\n# [-adv] enables advanced mode. ID number of the product will be required manually.\n# &lt;RSA-2048 PrivateKey(PEM file)&gt; is the file generated in step 1.\n</code></pre> <p>Choose the product type, user language and the version as needed. Then it will print a serial number, like <code>XXXX-XXXX-XXXX-XXXX</code>.</p> <p>Input custom user name and organization name casually.</p> <p>Then comes request code: turn off the Internet connection, fill in the serial number above and choose Activation button. Generally, it will fail, then choose manual activation instead. Copy the request code from manual activation window to keygen.exe and press <code>Enter</code> twice.</p> <p>If everything goes well, it will generate a string of activation code like Base64 code. Copy to the activation window to finish activation.</p>"},{"location":"misc/charles.html","title":"Charles","text":""},{"location":"misc/charles.html#References","title":"References","text":"<ol> <li>Windows\u6293\u5305\u5de5\u5177 -- Charles - chai_mm\u7684\u535a\u5ba2 - CSDN\u535a\u5ba2</li> </ol>"},{"location":"misc/chrome.html","title":"Chrome","text":""},{"location":"misc/chrome.html#Overview","title":"Overview","text":"<p>Refer to Google Chrome Help. Get old versions here.</p>"},{"location":"misc/chrome.html#Keyboard-Shortcuts","title":"Keyboard Shortcuts","text":"<p>Here is the full list. Following shortcuts are based on Windows and Linux.</p>"},{"location":"misc/chrome.html#Tab-and-Window","title":"Tab and Window","text":"<ul> <li><code>Ctrl + N</code> open a new window</li> <li><code>Ctrl + T</code> open a new tab</li> <li><code>Ctrl + Shift + T</code> reopen previously closed tabs in the order they were closed</li> </ul>"},{"location":"misc/chrome.html#Search-Syntax","title":"Search Syntax","text":"<ul> <li>Exclude words with <code>-</code> before: <code>Chinese -food</code></li> <li>Exact match with a word inside quotes: <code>\"tallest building\"</code></li> <li>Combine searches with upper <code>OR</code>: <code>you OR me</code></li> <li>Specify a site with <code>site:</code> in front of a site or domain, no space: <code>site:baidu.com</code></li> <li>Relate to a site with <code>related:</code> in front of a known web address, no space: <code>related:baidu.com</code></li> </ul> <p>Refer to Refine web searches for a full list.</p>"},{"location":"misc/chrome.html#References","title":"References","text":"<ol> <li>\u3010\u5e72\u8d27\u3011Chrome\u63d2\u4ef6(\u6269\u5c55)\u5f00\u53d1\u5168\u653b\u7565 - \u6211\u662f\u5c0f\u8317\u540c\u5b66 - \u535a\u5ba2\u56ed</li> </ol>"},{"location":"misc/fiddler.html","title":"Fiddler","text":""},{"location":"misc/fiddler.html#Overview","title":"Overview","text":"<p>Fiddler works as a proxy server. Fiddler will logout when exiting. However, network anomaly will happen if Fiddler exits abnormally. In that case, just restart Fiddler and close again. This is based on Fiddler 4.</p>"},{"location":"misc/fiddler.html#Configuration","title":"Configuration","text":""},{"location":"misc/fiddler.html#PC","title":"PC","text":"<ol> <li>Open Fiddler\uff0cchoose the path: Tools -&gt; Options -&gt; HTTPS</li> <li>Check \"Decrypt HTTPS traffic\", and then requests of 'HTTPS' will be intercept.</li> <li>(Optional) Check \"Ignore server certificate errors (unsafe)\" if it's warned that the certificate of the website is untrusted.</li> <li>Choose path: Actions -&gt; Trust Root Certificate, and then install the certificate.</li> </ol>"},{"location":"misc/fiddler.html#Mobile","title":"Mobile","text":"<ol> <li>Choose path:* Tools -&gt; Options -&gt; Connections*, modify the default port if needed.</li> <li>Check \"Allow remote computers to connect\" to allow remote connections.</li> <li>(Optional) Check \"Act as system proxy on startup\".</li> <li>Keep the mobile under the same LAN with PC.</li> <li>Use the mobile to access the address: PC-IP: port, then download and install the certificate of Fiddle.</li> <li>Configure the proxy server of WiFi of the mobile.</li> </ol>"},{"location":"misc/fiddler.html#References","title":"References","text":"<ol> <li>fiddler\u914d\u7f6e\u53ca\u4f7f\u7528\u6559\u7a0b - \u535a\u5ba2\u56ed</li> </ol>"},{"location":"misc/idea.html","title":"IntelliJ IDEA","text":"<p>Access to information about IntelliJ IDEA from online help or install IntelliJ IDEA Help plugin for offline use. Course IntelliJ IDEA\u795e\u5668\u4f7f\u7528\u6280\u5de7 on  is also recommended."},{"location":"misc/idea.html#Skills","title":"Skills","text":""},{"location":"misc/idea.html#Code-Completion","title":"Code Completion","text":"<p>The function is used to complete code, including loop statement, if statement and so on. Use templates just starting with a dot <code>.</code>. Available templates includes <code>.var</code>, <code>.null</code>, <code>.not null</code>, <code>.nn</code>, <code>.for</code>, <code>.fori</code>, <code>.not</code>, <code>.if</code>, <code>.cast</code>, <code>.return</code>. An example is shown as the following GIF.</p> <p></p>"},{"location":"misc/latex.html","title":"LaTeX","text":"<p>From Supported Functions \u00b7 KaTeX</p>"},{"location":"misc/latex.html#Overview","title":"Overview","text":""},{"location":"misc/latex.html#Inline","title":"Inline","text":"<p>For example, \\(f(n)=(n-1)!\\quad\\forall n\\in\\mathbb N\\)</p>"},{"location":"misc/latex.html#Block","title":"Block","text":"\\[ x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} \\]"},{"location":"misc/latex.html#Details","title":"Details","text":""},{"location":"misc/latex.html#Accents","title":"Accents","text":"<p>\\(a'\\) <code>a'</code> \\(\\tilde{a}\\) <code>\\tilde{a}</code></p>"},{"location":"misc/latex.html#Letters-and-Unicode","title":"Letters and Unicode","text":""},{"location":"misc/latex.html#Greek-Letters","title":"Greek Letters","text":"<p>\\(\\varphi\\) <code>\\varphi</code></p>"},{"location":"misc/latex.html#Layout","title":"Layout","text":""},{"location":"misc/latex.html#Vertical-Layout","title":"Vertical Layout","text":"<p>\\(a_n\\) <code>a_n</code> \\(a^n\\) <code>a^n</code></p>"},{"location":"misc/latex.html#Operators","title":"Operators","text":""},{"location":"misc/latex.html#Fractions","title":"Fractions","text":"<p>\\(\\frac{a}{b}\\) <code>\\frac{a}{b}</code></p>"},{"location":"misc/latex.html#Relations","title":"Relations","text":"<p>\\(\\ge\\) <code>\\ge</code></p>"},{"location":"misc/markdown.html","title":"Markdown","text":""},{"location":"misc/markdown.html#Overview","title":"Overview","text":"<p>Markdown in Evernote supports CommonMark and GFM (GitHub Flavored Markdown) and that for mkdocs is Python-Markdown which inherited from John Gruber\u2019s Markdown.</p>"},{"location":"misc/markdown.html#Markdown","title":"Markdown","text":""},{"location":"misc/markdown.html#Images","title":"Images","text":"<p>Evernote only supports \".png\", \".jpg\" and \".gif\".</p> <pre><code>![alt](../img/favicon.ico \"optional title\")\n&lt;!--\nalt: show if the image can't display and be used for Search Engine.\noptional title: show when mouse is over the image.\n--&gt;\n\n&lt;!-- if a title is required, following is an optional way. --&gt;\n&lt;center&gt;\n    ![alt](url)\n    title\n&lt;/center&gt;\n</code></pre> <p>      \u767e\u5ea6 </p>"},{"location":"misc/markdown.html#Code-Block","title":"Code Block","text":"<p>Supported languages are as follows:</p> NAME KEY mkdocs Typora Java java Markdown markdown Shell bash, shell N"},{"location":"misc/markdown.html#References","title":"References","text":"<ol> <li>\u5370\u8c61\u7b14\u8bb0 Markdown \u5165\u95e8\u6307\u5357</li> </ol>"},{"location":"misc/vscode.html","title":"Visual Studio Code","text":""},{"location":"misc/vscode.html#Overview","title":"Overview","text":"<p>Visual Studio Code is a lightweight but powerful source code editor. Here are the documentations(https://code.visualstudio.com/docs).</p>"},{"location":"misc/vscode.html#Extensions","title":"Extensions","text":"<ol> <li>Python</li> <li>vscode-icons: show icons for various types of files.</li> <li>Beautify: format the code.</li> <li>Code Spell Checker</li> <li>TODO Highlight</li> <li>Markdown All in One, markdownlint, Markdown Preview Enhanced</li> <li>Language support for Java for Visual Studio Code</li> </ol>"},{"location":"misc/wiki.html","title":"Wiki","text":""},{"location":"misc/wiki.html#Overview","title":"Overview","text":"<p>This page is about how to build a wiki system. The example is MkDocs which is easy to deploy and use. It transforms files of Markdown to static web pages which can be accessed locally and also hosted on the server, such as GitHub. This blogs are exactly based in MkDocs.</p>"},{"location":"misc/wiki.html#Installation","title":"Installation","text":""},{"location":"misc/wiki.html#Ubuntu","title":"Ubuntu","text":"<pre><code>$ sudo apt-get install mkdocs\n</code></pre>"},{"location":"misc/wiki.html#Windows","title":"Windows","text":"<pre><code>$ pip install mkdocs\n\n$ mkdocs --version # verify\n</code></pre> <p>MkDocs supports Python versions 2.7.9+, 3.4+, and pypy.</p>"},{"location":"misc/wiki.html#Usage","title":"Usage","text":""},{"location":"misc/wiki.html#Create","title":"Create","text":"<pre><code>$ mkdocs new my-wiki\n</code></pre> <p>The docs directory is to save custom files of Markdown. There is an index.md file by default.</p> <p>The mkdocs.yml file is to configure the wiki website, including title, content, language and so on.</p>"},{"location":"misc/wiki.html#Preview","title":"Preview","text":"<pre><code>$ mkdocs serve #start the service of MkDocs\n</code></pre> <p>Access the address configured in the mkdocs.yml file, &lt;127.0.0.1:8000&gt; by default.</p>"},{"location":"misc/wiki.html#Add","title":"Add","text":"<p>Add a markdown file example.md to the directory docs. Then modify the mkdocs.yml to add navigation bar for the file.</p> <pre><code>pages:\n  - Home: index.md\n  - Example: example.md\n</code></pre>"},{"location":"misc/wiki.html#Insert-images","title":"Insert images","text":"<pre><code>![title](images/example.png) &lt;!--Absolute paths and relative paths are both useful.--&gt;\n</code></pre>"},{"location":"misc/wiki.html#Build","title":"Build","text":"<pre><code>$ mkdocs build\n</code></pre> <p>The command builds documents of Markdown to static web pages under directory site.</p>"},{"location":"misc/wiki.html#Hosted","title":"Hosted","text":""},{"location":"misc/wiki.html#Local","title":"Local","text":"<p>Deploy site with Tomcat. Access wiki from ."},{"location":"misc/wiki.html#GitHub","title":"GitHub","text":"<pre><code>$ cd my-wiki\n$ git init\n# create a repository on GitHub\n$ git remote add origin repository_address\n\n# Update the deployed pages, it will be pushed to gh-pages branch of origin.\n$ mkdocs gh-deploy\n</code></pre> <p>Set GitHub Pages in the Settings. Then the wiki is available from https://user_name.github.io/repository_name.</p>"},{"location":"misc/wiki.html#FAQ","title":"FAQ","text":""},{"location":"misc/wiki.html#WinError-10013","title":"WinError 10013","text":"<p>That happens because the port is being used. Find and kill the process using the port.</p> <pre><code>$ netstat -ano|findstr 8000\n$ taskkill /pid process_number /F\n</code></pre> <p>Or use another free port.</p> <pre><code>$ mkdocs serve --dev-addr=127.0.0.1:9999\n</code></pre> <p>Or modify the configuration file mkdocs.yml.</p> <pre><code>dev_addr: 127.0.0.1:9999\n</code></pre>"},{"location":"misc/wiki.html#Third-Party-Extensions","title":"Third Party Extensions","text":"<ol> <li> <p>Install third party module to docs directory.</p> </li> <li> <p>Add related js and css files, and configuration options to <code>markdown_extensions</code>.</p> </li> </ol> <p>Refer to various third party extensions.</p>"},{"location":"misc/wiki.html#Other-systems","title":"Other systems","text":"<ol> <li>MediaWiki</li> <li>DokuWiki</li> <li>minDoc</li> <li>Gitbook</li> <li>Docsify</li> <li>Hexo</li> </ol>"},{"location":"misc/wiki.html#References","title":"References","text":"<ol> <li> <p>MkDocs \u4e2d\u6587\u6587\u6863</p> </li> <li> <p>\u642d\u5efa\u81ea\u5df1\u7684wiki\u77e5\u8bc6\u7ba1\u7406\u7cfb\u7edf</p> </li> </ol>"},{"location":"misc/windows.html","title":"Windows","text":""},{"location":"misc/windows.html#Windows-Commands","title":"Windows Commands","text":"<p>To find information about a specific command, search here.</p>"},{"location":"misc/windows.html#Syntax","title":"Syntax","text":"<ul> <li><code>text</code> means exact input</li> <li><code>&lt;required&gt;</code> means the arg is required</li> <li><code>[option]</code> means the arg is optional</li> <li><code>{option1|option2}</code> means to choose one from the options</li> <li><code>...</code> means repeating the former one</li> </ul>"},{"location":"misc/windows.html#List-of-Commands","title":"List of Commands","text":"<ul> <li><code>ren [&lt;Drive&gt;:][&lt;Path&gt;]&lt;FileName1&gt; &lt;FileName2&gt;</code> rename files or directories, same as <code>rename</code>. </li> </ul>"},{"location":"misc/windows.html#Program","title":"Program","text":"<ol> <li>\u7528\u6237\u8d26\u6237 netplwiz</li> <li>\u542f\u52a8\u83dc\u5355 shell:startup\uff1a\u6dfb\u52a0exe\u5feb\u6377\u65b9\u5f0f\uff0cexe\u6dfb\u52a0\u5230\u81ea\u542f\u52a8</li> <li>\u8ba1\u7b97\u5668 calc</li> <li>\u4efb\u52a1\u8ba1\u5212\u7a0b\u5e8f taskschd.msc</li> <li>\u7cfb\u7edf\u914d\u7f6e msconfig</li> <li>\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668 explorer</li> <li>\u6ce8\u518c\u8868 regedt32</li> <li>\u4efb\u52a1\u7ba1\u7406\u5668 taskmgr</li> <li>\u8d44\u6e90\u76d1\u89c6\u5668 resmon</li> <li>\u6027\u80fd\u76d1\u89c6\u5668 perfmon</li> <li>Internet\u9009\u9879 inetcpl.cpl</li> <li>\u63a7\u5236\u9762\u677f control</li> <li>\u7a0b\u5e8f\u4e0e\u529f\u80fd appwiz.cpl</li> <li>\u4e8b\u4ef6\u67e5\u770b\u5668 eventvwr</li> <li>\u7cfb\u7edf\u4fe1\u606f msinfo32</li> <li>\u8ba1\u7b97\u673a\u7ba1\u7406 compmgmt.msc</li> <li>Windows\u7248\u672c winver</li> </ol>"},{"location":"misc/windows.html#%E5%91%BD%E4%BB%A4","title":"\u547d\u4ee4","text":"<ol> <li>\u67e5\u770b\u6240\u6709\u8fdb\u7a0b netstat \u2013ano</li> <li>\u67e5\u8be2\u5360\u7528\u4e868080\u7aef\u53e3\u7684\u8fdb\u7a0b netstat -ano|findstr \"8080\"</li> <li>\u67e5\u627e\u8fdb\u7a0b\u53f7\u5bf9\u5e94\u7684\u8fdb\u7a0b\u540d\u79f0 tasklist|findstr 3112</li> <li>\u6839\u636e\u8fdb\u7a0b\u540d\u79f0\u6740\u6b7b\u8fdb\u7a0b taskkill /f /t /im /javaw.exe</li> </ol>"},{"location":"misc/windows.html#NET","title":"NET","text":"<p>NET commands involve management of network, service, user, and so on.</p>"},{"location":"misc/windows.html#Service","title":"Service","text":"<pre><code>$ net start &lt;service name&gt;  # Administrater is required\n$ net stop &lt;service name&gt;\n</code></pre>"},{"location":"py/index.html","title":"Index","text":""},{"location":"py/index.html#Overview","title":"Overview","text":"<p>Learn Python3 and Python2.</p>"},{"location":"py/index.html#Installation","title":"Installation","text":""},{"location":"py/index.html#Windows","title":"Windows","text":"<p>Download and install Python2 and Python3.</p> <p>Rename <code>python.exe</code> under directory of <code>Python 2</code> to <code>python2.exe</code>\uff0c<code>pythonw.exe</code> to <code>pythonw2.exe</code></p> <p>Add the directory of Python 2 and Python 3 to the system environment variables, the directory <code>Scripts</code> too.</p> <p>Execute the following commands in the command line.</p> <pre><code>python2 -m pip install --upgrade pip --force-reinstall\npython3 -m pip install --upgrade pip --force-reinstall\n</code></pre> <p>Input <code>pip2 -V</code> and <code>pip3 -V</code> to show the information of version.</p>"},{"location":"py/index.html#Linux","title":"Linux","text":"<p>Install related compilation tools.</p> <pre><code>yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel\nyum install -y libffi-devel zlib1g-dev\nyum install zlib* -y\n</code></pre> <p>Download installation package of Python. Unzip, make and install Python.</p> <pre><code>cd /home\nwget wget https://www.python.org/ftp/python/3.x.x/Python-3.x.x.tar.xz\ntar -xvJf  Python-3.x.x.tar.xz\n\n# create installation directory\nmkdir /usr/local/python3\ncd Python-3.x.x\n./configure --prefix=/usr/local/python3 --enable-optimizations --with-ssl\n# prefix: specify installation directory\n# enable-optimizations: improve efficiency\n# with-ssl: include ssl to help install pip\n\nmake &amp;&amp; make install\n</code></pre> <p>Create symbolic link to the path</p> <pre><code>ln -s /usr/local/python3/bin/python3 /usr/local/bin/python3\nln -s /usr/local/python3/bin/pip3 /usr/local/bin/pip3\n</code></pre> <p>Verify if installed successfully.</p> <pre><code>python -V\npip -V\n</code></pre> <p>Because of command <code>yum</code> is based on built-in Python2, open the following two files to change \"#! /usr/bin/python\" to \"#! /usr/bin/python2\" to redirect to Python2.</p> <pre><code>vi /usr/bin/yum\nvi /usr/libexec/urlgrabber-ext-down\n</code></pre>"},{"location":"py/index.html#Change-the-Mirror","title":"Change the Mirror","text":"<p>Following are common internal mirrors:</p> <ol> <li>Aliyun https://mirrors.aliyun.com/pypi/simple/</li> <li>Douban https://pypi.douban.com/simple/</li> <li>THU https://pypi.tuna.tsinghua.edu.cn/simple/</li> <li>USTC https://pypi.mirrors.ustc.edu.cn/simple/</li> <li>HUST https://pypi.hustunique.com/</li> </ol> <p>The newest release of Ubuntu requires mirrors from <code>https</code>.</p> <ol> <li>Under Linux, modify ~/.pip/pip.conf as follows:</li> </ol> <pre><code>[global]\nindex-url = https://mirrors.aliyun.com/pypi/simple/\n[install]\ntrusted-host = https://mirrors.aliyun.com/\n</code></pre> <ol> <li>Under Windows, create a new file %Users%\\username\\pip\\pip.ini as follows:</li> </ol> <pre><code>[global]\nindex-url = https://mirrors.aliyun.com/pypi/simple/\n[install]\ntrusted-host = https://mirrors.aliyun.com/\n</code></pre>"},{"location":"py/index.html#Packaging","title":"Packaging","text":"<p>We can use py2exe or PyInstaller to package scripts of Python to a executable file.</p>"},{"location":"py/index.html#py2exe","title":"py2exe","text":"<p>py2exe is an Distutils extension which converts Python scripts into executable Windows programs, able to run without requiring a Python installation.</p> <p>Download py2exe for Python 2 from SourceForge. Use pip to install that for Python 3 or download it from PyPI.</p> <p>Create a setup.py under the destination directory along with test.py:</p> <pre><code># setup.py\nfrom distutils.core import setup\n\nsetup(console=['test.py'])\n</code></pre> <p>Then run the setup.py with py2exe from the command line.</p> <pre><code>python setup.py py2exe\n</code></pre> <p>It will create two directories named dist and build, including generated executable file and other files.</p>"},{"location":"py/index.html#PyInstaller","title":"PyInstaller","text":"<p>PyInstaller can package Python programs to executable file under Windows, Linux, Mac OS X, Solaris and AIX.</p> <p>Install it using pip or download it from its website. Note that install PyWin32 before install PyInstaller on Windows.</p> <p>To package test.py, just run the following command from the command line:</p> <pre><code>pyinstaller.exe --onefile --windowed test.py\n</code></pre> <ul> <li>--onefile or -F denotes packaging the program into one single executable file. Otherwise, libraries will be distributed as separate file.</li> <li>--windowed or \"-w\" denotes to show a window when running the generated application.</li> <li>--name can be used to name the application.</li> </ul>"},{"location":"py/index.html#Environment","title":"Environment","text":"<p>Use virtual environment to simplify the libraries. First, install virtualenv with pip. As follows are commands for example.</p> <pre><code>virtualenv example_env # create one\n\nvirtualenv --system-site-packages example_env # inherit global modules\n\nactivate # activate the environment\n</code></pre> <p>Or just use PyCharm.</p>"},{"location":"py/index.html#References","title":"References","text":"<ul> <li>Python 3 Documentation</li> <li>PyPI \u00b7 The Python Package Index</li> <li>FrontPage - py2exe.org</li> <li>setuptools documentation</li> <li>PyInstaller Manual \u2014 PyInstaller documentation</li> <li>Google Python Style Guide</li> </ul>"},{"location":"py/flask.html","title":"Flask","text":""},{"location":"py/flask.html#Flask","title":"Flask","text":"<p>Flask is a lightweight WSGI web application framework. Here is Chinese documentations.</p>"},{"location":"py/flask.html#Deploy","title":"Deploy","text":"<p>Assume that there is a simple application of Flask as follows:</p> <pre><code>from flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/hello')\ndef index():\n    return 'hello flask'\n</code></pre>"},{"location":"py/flask.html#Windows","title":"Windows","text":"<p>On Windows, Tornado is a choice as the WSGI server. Install packages of Tornado first.</p> <p>Create a <code>server.py</code> under the project directory.</p> <pre><code># server.py\n\nfrom tornado.httpserver import HTTPServer\nfrom tornado.ioloop import IOLoop\nfrom tornado.wsgi import WSGIContainer\n\nfrom app import app\n\ns = HTTPServer(WSGIContainer(app))\ns.listen(9900)  # listen to port: 9900\nIOLoop.current().start()\n</code></pre> <p>Run <code>server.py</code>. And then open the following address: http://localhost:9900/hello.</p>"},{"location":"py/app/excel.html","title":"Excel","text":""},{"location":"py/app/excel.html#Overview","title":"Overview","text":""},{"location":"py/app/excel.html#xlwtxlrd","title":"xlwt/[xlrd]","text":"<pre><code>import xlrd\nimport xlwt\n\n# read with xlrd\nwb = xlrd.open_workbook('example.xlsx', encoding='utf-8')\ndata = {}\nfor i, sheet in enumerate(wb.sheets()):\n    nrows = sheet.nrows  # number of rows in the sheet\n    ncols = sheet.ncols  # number of columns in the sheet\n    sheet_values = []\n    for r in range(nrows):\n        row_values = []\n        for c in range(ncols):\n            row_values.append(sheet.cell(r, c).value)\n        sheet_values.append(row_values)\n    data[sheet.name] = sheet_values\n\n# write with xlwt\nwb = xlwt.Workbook(encoding='utf-8')\nfor key, value in data.items():\n    sheet = wb.add_sheet(key)\n    for r, row in enumerate(value):\n        for c, value in enumerate(row):\n            sheet.write(r, c, value)\nwb.save('dst.xls')\n</code></pre>"},{"location":"py/app/excel.html#xlwtWorksheetWorksheet","title":"xlwt.Worksheet.Worksheet","text":"<pre><code>write(r, c, label='', style=&lt;xlwt.Style.XFStyle object&gt;)\n\n# example\nwrite(0, 0, 'example')\nwrite(0,1,xlwt.Formula('HYPERLINK(\"%s\", \"%s\")' % (url, name)))\n</code></pre> <p><code>r</code> and <code>c</code> start with 0.</p> <p><code>label</code> is the data value to be written. </p> <ul> <li>An <code>int</code>, <code>long</code>, or <code>Decimal</code> instance is converted to <code>float</code>.</li> <li>A <code>unicode</code> instance is written as is. A <code>bytes</code> instance is converted to <code>unicode</code> using the encoding, which defaults to <code>ascii</code>, specified when the Workbook instance was created. </li> <li>A <code>datetime</code>, <code>date</code> or <code>time</code> instance is converted into Excel date format (a float representing the number of days since (typically) <code>1899-12-31T00:00:00</code>, under the pretence that 1900 was a leap year).</li> <li>A <code>bool</code> instance will show up as <code>TRUE</code> or <code>FALSE</code> in Excel.</li> <li><code>None</code> causes the cell to be blank: no data, only formatting.</li> <li>An <code>xlwt.Formula</code> instance causes an Excel formula to be written.</li> </ul> <p>Notes: xlwt doesn't support .xlsx.</p>"},{"location":"py/app/spider.html","title":"Spider","text":""},{"location":"py/app/spider.html#Overview","title":"Overview","text":"<p>Web spider is a kind of script to crawl information from the Internet.</p>"},{"location":"py/app/spider.html#Architecture","title":"Architecture","text":"<p>Common process of spider is Request -&gt; Get responses -&gt; Parse the content -&gt; Save useful data, including five parts:</p> <ul> <li>Scheduler: schedule to make the following parts work well together.</li> <li>URL Manager: manage URLs accessed and to access by memory, database or cache.</li> <li>Downloader: download web pages from the specified URLs. Logging in, proxy and cookies may be required.</li> <li>Parser: parse the web pages downloaded to obtain useful information by DOM tree or parsing the whole string of the page. Regular expression, <code>html.parser</code>, <code>beautifulsoup</code>, <code>lxml</code> are all optional.</li> <li>Application: apply the gotten information.</li> </ul>"},{"location":"py/app/spider.html#References","title":"References","text":"<ol> <li>Python \u722c\u866b_Python_guoqkmiss\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</li> <li>Python\u722c\u53d6IPTV\u64ad\u653e\u6e90</li> </ol>"},{"location":"py/app/task.html","title":"Task","text":""},{"location":"py/app/task.html#Overview","title":"Overview","text":"<p>This note will introduce ways to execute scheduled tasks in Python. Mainly include four ways: function <code>sleep</code>, class <code>Timer</code>, module <code>sched</code> and frame <code>APScheduler</code>.</p>"},{"location":"py/app/task.html#Loop-and-sleep","title":"Loop and sleep","text":"<pre><code>import time\n\n# Run every other n seconds.\ndef task(n):         \n    while True:\n        print('Hello World!')\n        time.sleep(n)\n\ntask(5)\n</code></pre> <p>Notes: The program will be BLOCKED in the time.</p>"},{"location":"py/app/task.html#Timer","title":"Timer","text":"<p>It's in the module <code>threading</code>, passing the interval of time (unit: seconds), the function to execute and arguments of the function as three arguments.</p> <pre><code>from threading import Timer\n\ndef f(s):\n    print(s)\n\n# Execute only once after 5 seconds.\nt = Timer(5, f, ('Hello World!',))\nt.start()\n\n# Execute the task and then define next one.\ndef task(s, interval):\n    print(s)\n    Timer(interval, task, (s, interval)).start()\n</code></pre> <p>Notes:</p> <ol> <li>The program won't be blocked in this way.</li> <li><code>Timer</code> won't loop. It's over after executed.</li> </ol>"},{"location":"py/app/task.html#sched","title":"sched","text":"<pre><code>import sched\nimport time\n\n# initialize scheduler\n# pass the time and delay functions\nscheduler = sched.scheduler(time.time, time.sleep)\n\ndef task(s, interval):\n    print(s)\n    # pass the interval, priority, function to execute and arguments of the function\n    scheduler.enter(interval, 0, task, (s, interval))\n\n# the first one\nscheduler.enter(0, 0, task, (5, 'Hello World!'))\nscheduler.run()\n</code></pre> <p>Notes: Same as <code>Timer</code>, <code>sched</code> won't loop either.</p>"},{"location":"py/app/task.html#APScheduler","title":"APScheduler","text":"<p>Install with <code>pip install APScheduler</code>.</p>"},{"location":"py/app/task.html#Four-Components","title":"Four Components","text":"<p>Trigger defines which task to run next. There are three built-in triggers:</p> <ol> <li>date: specified time</li> <li>interval: fixed time intervals</li> <li>cron: cron expression</li> </ol> <p>Job Store, as the name suggests, stores jobs to be scheduled. <code>MemoryJobStore</code> is used by default. Database is also available if necessary.</p> <p>Executor execute jobs in the thread or thread pool. It will notify <code>Scheduler</code> when jobs are finished. Two common ones are <code>ProcessPoolExecutor</code> and <code>ThreadPoolExecutor</code>.</p> <p>Schedulers configures the above components, such as adding a job. As follow are all the schedulers: </p> <ol> <li>BlockingScheduler: use when the scheduler is the only thing running in your process</li> <li>BackgroundScheduler: use when you\u2019re not using any of the frameworks below, and want the scheduler to run in the background inside your application</li> <li>AsyncIOScheduler: use if your application uses the asyncio module</li> <li>GeventScheduler: use if your application uses gevent</li> <li>TornadoScheduler: use if you\u2019re building a Tornado application</li> <li>TwistedScheduler: use if you\u2019re building a Twisted application</li> <li>QtScheduler: use if you\u2019re building a Qt application</li> </ol>"},{"location":"py/app/task.html#Configuration","title":"Configuration","text":"<p>To be continued...</p>"},{"location":"py/app/task.html#References","title":"References","text":"<ol> <li>Python \u5b9a\u65f6\u4efb\u52a1\u7684\u5b9e\u73b0\u65b9\u5f0f - \u67ab\u98de\u98de - \u535a\u5ba2\u56ed</li> </ol>"},{"location":"py/lib/bs4.html","title":"BeautifulSoup","text":""},{"location":"py/lib/bs4.html#Overview","title":"Overview","text":"<p>Refer to the documentations.</p>"},{"location":"py/lib/configparser.html","title":"configParser","text":""},{"location":"py/lib/configparser.html#Get-Started","title":"Get Started","text":"<p>Following is an example of .ini file:</p> <pre><code>[DEFAULT]\nServerAliveInterval = 45\nCompression = yes\nCompressionLevel = 9\nForwardX11 = yes\n\n[bitbucket.org]\nUser = hg\n\n[topsecret.server.com]\nPort = 50022\nForwardX11 = no\n</code></pre> <p>Create and save a configuration file above by ConfigParser. It's treated much like a dictionary. </p> <pre><code>import configparser\nconfig = configparser.ConfigParser()\n\n# write\nconfig['DEFAULT'] = {\n    'ServerAliveInterval': '45',\n    'Compression': 'yes',\n    'CompressionLevel': '9'\n}\nconfig['bitbucket.org'] = {}\nconfig['bitbucket.org']['User'] = 'hg'\nconfig['topsecret.server.com'] = {}\ntopsecret = config['topsecret.server.com']\ntopsecret['Port'] = '50022'     # mutates the parser\ntopsecret['ForwardX11'] = 'no'  # same here\nconfig['DEFAULT']['ForwardX11'] = 'yes'\n\nwith open('example.ini', 'w') as configfile:\n    config.write(configfile)\n</code></pre> <p>Then read it back.</p> <pre><code>import configparser\n\nconfig = configparser.ConfigParser()\n\nconfig.sections() # []\n\nconfig.read('example.ini')\nconfig.sections() # ['bitbucket.org', 'topsecret.server.com']\nprint('bitbucket.org' in config) # True\nuser = config['bitbucket.org']['User'] # 'hg'\ncompression = config['DEFAULT']['Compression'] # 'yes'\ntopsecret = config['topsecret.server.com']\nfor key in config['bitbucket.org']:  \n    print(key)\n# user\n# compressionlevel\n# serveraliveinterval\n# compression\n# forwardx11\n</code></pre> <p>Notes: all values in the configuration file are stored as strings. Convert types with given getter methods or customized methods.</p> <pre><code>import configparser\n\nconfig = configparser.ConfigParser()\nconfig['DEFAULT'].getint('ServerAliveInterval') # 45\n</code></pre>"},{"location":"py/lib/configparser.html#INI-File","title":".INI File","text":"<p>A configuration file consists of sections, each led by a <code>[section]</code> header, followed by key/value entries separated by a specific string ('=' or ':').</p> <p>ConfigParser supports interpolation. This means values can be preprocessed before returning them from <code>get()</code> calls.</p> <pre><code>from configparser import ConfigParser, BasicInterpolation\n\nconfig = ConfigParser(interpolation=BasicInterpolation)\n</code></pre> <p>BasicInterpolation enables values to contain format strings which refer to other values in the same section, or values in the special default section.</p> <pre><code>[Paths]\nhome_dir: /Users\nmy_dir: %(home_dir)s/lumberjack\nmy_pictures: %(my_dir)s/Pictures\n\n[Escape]\ngain: 80%%  # use a %% to escape the % sign (% is the only character that needs to be escaped)\n</code></pre> <p>ExtendedInterpolation uses <code>${section:option}</code> to denote a value from a foreign section. If the <code>section:</code> part is omitted, interpolation defaults to the current section (and possibly the default values from the special section).</p> <pre><code>[Common]\nhome_dir: /Users\nlibrary_dir: /Library\nsystem_dir: /System\nmacports_dir: /opt/local\n\n[Frameworks]\nPython: 3.2\npath: ${Common:system_dir}/Library/Frameworks/\n</code></pre>"},{"location":"py/lib/logging.html","title":"logging","text":"<p>Use standard module logging to print logs. It defines five levels of logs: DEBUG &lt; INFO &lt; WARNING &lt; ERROR &lt; CRITICAL and contains four basic classes: Logger, Handler, Filter and Formatter.</p>"},{"location":"py/lib/logging.html#Get-Started","title":"Get Started","text":"<p>Print simple logs by calling module-level functions. Following calls will print logs onto the console.</p> <pre><code>import logging\n\nlogging.debug('This is a debug log.')\nlogging.info('This is a info log.')\nlogging.warning('This is a warning log.')\nlogging.error('This is a error log.')\nlogging.critical('This is a critical log.')\n\nlogging.log(logging.DEBUG, 'This is a debug log.')\n</code></pre> <p>By default, only WARNING or above logs will be printed onto console. To modify basic configurations, we need to call <code>logging.basicConfig()</code> with following optional arguments.</p> <ul> <li>filename specifies target file that logs are output to.</li> <li>filemode specifies mode to open target file, 'a' by default.</li> <li>format specifies format to output logs. Refer to LogRecord attributes.</li> <li>datefmt specifies format of date/time, taking effect when format contains time field. Refer to time.strftime().</li> <li>level</li> <li>stream specifies stream logs are output to, such as sys.stdout and sys.stderr.</li> <li>style specifies style of format string. Optional values includes '%'(default), '{' and '$'. It's since Python 3.2.</li> <li>handlers specifies handlers to handle logs. It's since Python 3.3.</li> </ul> <p>filename, stream and handlers are incompatible. If both are present, a ValueError is raised.</p> <pre><code>import logging\n\nlogging.basicConfig(filename='example.log', level=logging.INFO, format='%(asctime)s | %(levelname)s | %  (message)s', datefmt='%Y-%m-%d %I:%M:%S')\nlogging.info('Hi, %s', 'Jack')\n</code></pre> <p>It will print the following log.</p> <pre><code>2020-03-09 22:38:00 | INFO | Hi, Jack\n</code></pre>"},{"location":"py/lib/logging.html#Advanced","title":"Advanced","text":"<p>Create an instance of Logger to record logs by calling <code>logging.getLogger('name')</code>. Its procedure shows as follows.</p> <p></p>"},{"location":"py/lib/logging.html#Loggers","title":"Loggers","text":"<p>The most common used methods of Logger fall into two categories:</p> <ul> <li>configuration<ul> <li><code>Logger.setLevel()</code></li> <li><code>Logger.addHandler()</code> and <code>Logger.removeHandler()</code></li> <li><code>Logger.addFilter()</code> and <code>Logger.removeFilter()</code></li> </ul> </li> <li>message sending<ul> <li><code>Logger.debug()</code>, <code>Logger.info()</code>, <code>Logger.warning()</code>, <code>Logger.error()</code> and <code>Logger.critical()</code></li> <li><code>Logger.exception()</code></li> <li><code>Logger.log()</code></li> </ul> </li> </ul>"},{"location":"py/lib/logging.html#Handlers","title":"Handlers","text":""},{"location":"py/lib/logging.html#Formatters","title":"Formatters","text":""},{"location":"py/lib/logging.html#Configuration","title":"Configuration","text":"<p>There are three ways to configure logging:</p> <ul> <li>Creating loggers, handlers, and formatters explicitly using Python code.</li> <li>Creating a logging configuration file and reading it using the <code>fileConfig()</code> function.</li> <li>Creating a dictionary of configuration information and passing it to the <code>dictConfig()</code> function.</li> </ul>"},{"location":"py/lib/logging.html#References","title":"References","text":"<ul> <li>logging \u2014 Logging facility for Python \u2014 Python 3 documentation</li> <li>Logging HOWTO \u2014 Python 3 documentation</li> <li>Logging Cookbook \u2014 Python 3 documentation</li> </ul>"},{"location":"py/lib/pymysql.html","title":"PyMySQL","text":"<p>Connect to MySQL with Python.</p>"},{"location":"py/lib/pymysql.html#Installation","title":"Installation","text":"<pre><code>pip install pymysql\n</code></pre>"},{"location":"py/lib/pymysql.html#Usage","title":"Usage","text":"<p>To access to MySQL, get connection to the database first and then execute relative SQLs with cursor. Following is an example.</p> <pre><code>import pymysql.cursors\n\nconnection = pymysql.connect(host='localhost', port=3306, user='root', password='1234', database='example')\ncursor = connection.cursor()\nsql = 'select * from example.user'\ncursor.execute(sql)\nresults = cursor.fetchall()\nfor result in results:\n    print(result)\n\ncursor.close()\nconnection.close()\n</code></pre>"},{"location":"py/lib/pymysql.html#References","title":"References","text":"<ul> <li>PyMySQL documentation</li> </ul>"},{"location":"py/lib/pywin32.html","title":"PyWin32","text":""},{"location":"py/lib/pywin32.html#Overview","title":"Overview","text":"<p>It provides the Windows APIs from Python.</p>"},{"location":"py/lib/pywin32.html#FileDialog","title":"FileDialog","text":"<pre><code>import win32ui\n\ndialog = win32ui.CreateFileDialog(1)\ndialog.SetOFNInitialDir('C:/Users/Administrator/Documents/')\ndialog.DoModal()\n\nfilename = dialog.GetPathName()\nprint(filename)\n</code></pre>"},{"location":"py/lib/pyyaml.html","title":"PyYAML","text":""},{"location":"py/lib/pyyaml.html#Overview","title":"Overview","text":"<p>Read data from a YAML file.</p>"},{"location":"py/lib/shutil.html","title":"shutil","text":""},{"location":"py/lib/shutil.html#Overview","title":"Overview","text":""},{"location":"py/lib/tkinter.html","title":"tkinter","text":""},{"location":"py/lib/tkinter.html#FileDialog","title":"FileDialog","text":"<pre><code>from tkinter import filedialog as fd\n\nfd.askopenfile()\n</code></pre>"},{"location":"py/lib/urllib.html","title":"urllib","text":""},{"location":"py/lib/urllib.html#Overview","title":"Overview","text":"<p>urllib is a package to deal with URLs, including 4 modules: urllib.request, urllib.error, urllib.parse, and urllib.robotparser. The main part is about module request.</p>"},{"location":"py/lib/urllib.html#Get-Started","title":"Get Started","text":"<p>Module request is for opening and reading URLs. An example is presented as follows. The response is an instance of <code>http.client.HTTPResponse</code>.</p> <pre><code>from urllib import request\n\n# build a request object\nreq = request.Request('https://www.baidu.com', headers={\n    'Host': 'www.baidu.com',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36'\n}, method='GET')\n\n# issue the request and print the result\nwith request.urlopen(req, timeout=30) as response:\n    print(response.read().decode('utf-8'))\n</code></pre> <p>To handle the result further, commonly a html page, use BeautifulSoup.</p>"},{"location":"py/lib/urllib.html#HTTP-Header","title":"HTTP Header","text":"<p>See more details here.</p>"},{"location":"py/lib/urllib.html#Request","title":"Request","text":"Header Description Example Accept Content types that clients accept text/html,application/xml Accept-Charset Accept-Encoding gzip, deflate Accept-Language zh-CN,zh;q=0.9,zh-TW;q=0.8 Host netloc www.douban.com Origin scheme://netloc. Used for POST request or CORS request Referer Previous URL User-Agent Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36"},{"location":"py/lib/urllib.html#Response","title":"Response","text":"Header Description Example Content-Encoding Content-Language Content-Length Content-Location Backup address Content-MD5 Content-Type MIME type"},{"location":"py/lib/urllib.html#Download","title":"Download","text":"<p>Under the package, there are two ways to download files from the Internet.</p>"},{"location":"py/lib/urllib.html#urllibrequesturlretrieve","title":"urllib.request.urlretrieve","text":"<pre><code>from urllib import request\n\n\ndef reporthook(block_count, block_size, total_size):\n    print('\\rDownloading: %.2f%%' % (100 * block_count * block_size / total_size), end='')\n\n\nurl = 'https://www.baidu.com/'\nfilename, headers = request.urlretrieve(url, filename='baidu.html', reporthook=reporthook, data=None)\n</code></pre> <p><code>filename</code> denotes target path of downloaded file. If absent, the location will be a tempfile with a generated name under the temp directory of operating system.</p> <p><code>reporthook</code> is a callback function which is called when a block is read. It can help print the process of downloading.</p> <p><code>data</code> specifies additional data when the method of request is POST.</p> <p>It will return the file location and headers of response.</p>"},{"location":"py/lib/urllib.html#Multi-Thread","title":"Multi-Thread","text":"<p>The second way is to request directly with <code>urllib.request</code> and speed up with threads.</p>"},{"location":"py/lib/urllib.html#parse","title":"parse","text":""},{"location":"py/lib/urllib.html#robotparser","title":"robotparser","text":""}]}